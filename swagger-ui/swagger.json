{
  "swagger": "2.0",
  "info": {
    "title": "CoreAPI",
    "version": "4.29.0"
  },
  "basePath": "/",
  "paths": {
    "/api/keep-alive": {
      "get": {
        "operationId": "get#/api/keep-alive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/email-back-in-stock": {
      "post": {
        "operationId": "post#/api/products/email-back-in-stock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "foo@bar.com"
                },
                "firstName": {
                  "type": "string",
                  "example": "Bob"
                },
                "surname": {
                  "type": "string",
                  "example": "Barker"
                },
                "size": {
                  "type": "string",
                  "example": "W2434"
                },
                "sku": {
                  "type": "string",
                  "example": "602015000888524"
                }
              }
            }
          }
        ],
        "summary": "Instruct WCS to send an email to a user if a particular item is back in stock",
        "responses": {
          "200": {
            "description": "Success response. This is not transformed from WCS.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "action": {
                  "type": "string",
                  "example": "NotifyMe"
                },
                "message": {
                  "type": "string",
                  "example": "Your request has been received, and you will receive an email when the item is in stock."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/desktop/navigation": {
      "get": {
        "operationId": "get#/api/desktop/navigation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/static-map": {
      "post": {
        "operationId": "post#/api/static-map",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "the paramters required to build the google static map url",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "currentLat",
                "currentLng",
                "markers",
                "dimensions",
                "iconDomain",
                "zoom"
              ],
              "properties": {
                "currentLat": {
                  "type": "number"
                },
                "currentLng": {
                  "type": "number"
                },
                "markers": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "height": {
                      "type": "integer"
                    },
                    "width": {
                      "type": "integer"
                    }
                  }
                },
                "iconDomain": {
                  "type": "string"
                },
                "zoom": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "summary": "builds and signs the url that is requested from googlemaps",
        "responses": {
          "200": {
            "description": "Successfully signed signature and unsigned url",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://maps.googleapis.com/maps/api/staticmap?center=51.515615%2C-0.1432734&zoom=14&size=394x650&maptype=roadmap&style=feature%3Apoi%7Cvisibility%3Aoff%26style%3Dfeature%3Apoi.park%7Cvisibility%3Aon&key=AIzaSyBadoEbcsHE0WvdLeRiBXz0mnGpwS7ZlnQ"
                },
                "signature": {
                  "type": "string",
                  "example": "https://maps.googleapis.com/maps/api/staticmap?center=51.515615%2C-0.1432734&zoom=14&size=394x650&maptype=roadmap&style=feature%3Apoi%7Cvisibility%3Aoff%26style%3Dfeature%3Apoi.park%7Cvisibility%3Aon&key=AIzaSyBadoEbcsHE0WvdLeRiBXz0mnGpwS7ZlnQ&signature=ffy74XUFWrPYsjDsQ8EfgQ2V_vw="
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "example": 400
                },
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "message": {
                  "type": "string",
                  "example": "a request body with the following properties are required: currentLat, currentLng, markers, dimensions, iconDomain, zoom"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/{targetCountry}/products/{partNumber}": {
      "get": {
        "operationId": "get#/api/{targetCountry}/products/{partNumber}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "targetCountry",
            "in": "path",
            "description": "ISO 2 country code of the catalog you want to query",
            "required": true,
            "type": "string"
          },
          {
            "name": "partNumber",
            "in": "path",
            "required": true,
            "description": "The product's partNumber, also sometimes called grouping e.g. \"TS26K31NGRY\"",
            "type": "string"
          }
        ],
        "summary": "Given a product's partNumber, finds that product in another country's catalog",
        "responses": {
          "200": {
            "$ref": "#/definitions/pdpProduct",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/{identifier}": {
      "get": {
        "operationId": "get#/api/products/{identifier}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Product Identifier - the product pathname",
            "required": true,
            "enum": [
              "/en/tsuk/product/love-gun-t-shirt-by-never-fully-dressed-6954936"
            ],
            "type": "string"
          }
        ],
        "summary": "Get product details",
        "responses": {
          "200": {
            "$ref": "#/definitions/pdpProduct",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "operationId": "get#/api/products",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "type": "string",
            "name": "category",
            "in": "query",
            "required": false,
            "collectionFormat": "csv",
            "pattern": "^\\d+,\\d+$"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "One of the values provided in the response body"
          },
          {
            "type": "integer",
            "name": "currentPage",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "name": "q",
            "in": "query",
            "required": false,
            "description": "The search query"
          },
          {
            "type": "string",
            "name": "refinements",
            "in": "query",
            "required": false,
            "description": "JSON array of objects with `key` and `value` properties. Can be constructed from response body"
          }
        ],
        "summary": "Get products based on a search query",
        "responses": {
          "200": {
            "description": "Listing of products matching the search query",
            "schema": {
              "type": "object",
              "properties": {
                "breadcrumbs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Home"
                      }
                    }
                  }
                },
                "canonicalUrl": {
                  "type": "string",
                  "example": "http://ts.pplive.arcadiagroup.ltd.uk"
                },
                "categoryDescription": {
                  "type": "string",
                  "example": ""
                },
                "categoryRefinement": {
                  "type": "object",
                  "properties": {
                    "refinementOptions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "categoryTitle": {
                  "type": "string",
                  "example": "gladiator"
                },
                "cmsPage": {
                  "type": "object",
                  "properties": {}
                },
                "jessionid": {
                  "type": "string",
                  "example": "00006QaC9CFgxWB0y-Pl37TS479"
                },
                "plpContentSlot": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/plpProducts"
                  }
                },
                "recordSpotlight": {
                  "type": "object",
                  "properties": {}
                },
                "refinements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/plpRefinements"
                  }
                },
                "searchTerm": {
                  "type": "string",
                  "example": "gladiator"
                },
                "sortOptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Best Match"
                      },
                      "value": {
                        "type": "string",
                        "example": "Relevance"
                      }
                    }
                  }
                },
                "tacticalEspot": {
                  "type": "object",
                  "properties": {
                    "isJsonFormat": {
                      "type": "boolean",
                      "example": true
                    },
                    "espotContents": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "type": "string",
                          "example": "116870"
                        },
                        "pageName": {
                          "type": "string",
                          "example": "Mobile PLP POS1 eSpot"
                        },
                        "baseline": {
                          "type": "string",
                          "example": "29"
                        },
                        "pageLastPublished": {
                          "type": "string",
                          "example": "2017-05-25 09:48:22.18484"
                        },
                        "pagePublishedBy": {
                          "type": "string",
                          "example": "Jake Stewart"
                        },
                        "contentPath": {
                          "type": "string",
                          "example": "/cms/pages/json/json-0000116870/json-0000116870.json"
                        },
                        "seoUrl": {
                          "type": "string",
                          "example": ""
                        },
                        "templateName": {
                          "type": "string",
                          "example": "Mobile Feature Page Data (REF 0000012221)"
                        },
                        "templatePublishDate": {
                          "type": "string",
                          "example": "2016-05-12 10:31:10.363931"
                        },
                        "site": {
                          "type": "string",
                          "example": "TSUK"
                        },
                        "type": {
                          "type": "string",
                          "example": "Page"
                        },
                        "version": {
                          "type": "string",
                          "example": "0"
                        },
                        "pageData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "imagelist"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "options": {
                                    "type": "object"
                                  },
                                  "columns": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "assets": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "target": {
                                          "type": "string",
                                          "example": ""
                                        },
                                        "alt": {
                                          "type": "string",
                                          "example": "Shipping Upgrade"
                                        },
                                        "link": {
                                          "type": "string",
                                          "example": "/en/tsuk/category/uk-delivery-4043283/home?TS=1421171569402&amp;cat2=2141530&amp;intcmpid=mobile_PLP_Delivery"
                                        },
                                        "source": {
                                          "type": "string",
                                          "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/ConsumerDirectStorefrontAssetStore/images/colors/color7/cms/pages/json/json-0000116870/images/Monty-PLP-UK.svg"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalProducts": {
                          "type": "number",
                          "example": 40
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/seo": {
      "get": {
        "operationId": "get#/api/products/seo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "seoUrl",
            "in": "query",
            "description": "SEO identifier for the category of products",
            "required": true,
            "example": "/en/tsuk/category/clothing-427/dresses-442",
            "type": "string"
          }
        ],
        "summary": "Get list of products from an SEO url",
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "type": "object",
              "properties": {
                "contentSlotContentHTML": {
                  "type": "string",
                  "example": "%3C%21--+CMS+Page+Version%3A+static-0000104259+baseline%3A+3+revision%3A+0+published%3A+2015-11-25+14%3A44%3A30.98948%3Acogz+cogz%0A+++++++++CMS+Temp+Version%3A+template-0000011825+baseline%3A+1+revision%3A+0+description%3A+Home+Page+Module+-+Basic+%28REF+0000011783%29+published%3A+2015-06-25+10%3A42%3A08.412652+--%3E%0A%0A%0A++%0A%3Clink+rel%3D%22stylesheet%22+type%3D%22text%2Fcss%22+href%3D%22http%3A%2F%2Fts.pplive.arcadiagroup.ltd.uk%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fcms%2Ftemplates%2Fstatic%2Ftemplate-0000011825%2Fcss%2Ftheme1.css%22+%2F%3E%3Cstyle+type%3D%22text%2Fcss%22%3E%0A%2F*%3C%21%5BCDATA%5B*%2F%0A%2F*%5D%5D%3E*%2F%0A%3C%2Fstyle%3E%0A%0A++++%0A++%0A%0A++%0A++++%3Cdiv+id%3D%22static-0000104259%22+class%3D%27theme1+masonry-item+module-basic%27%3E%0A++++++%3Cdiv+class%3D%22masonry-item-inner%22%3E%0A++++++++%3Cimg+src%3D%22http%3A%2F%2Fts.pplive.arcadiagroup.ltd.uk%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fcms%2Fpages%2Fstatic%2Fstatic-0000104259%2Fimages%2F35B66IBLK_2_thumb.jpg%22+alt%3D%22image%22+width%3D%22170%22+height%3D%22255%22+%2F%3E%0A++++++%3C%2Fdiv%3E%0A++++%3C%2Fdiv%3E%3C%21--Using+Master+Template%3A+%2Fstatic%2Ftemplate-0000011783+--%3E%0A++%0A%0A"
                },
                "productId": {
                  "type": "number",
                  "example": 20298281
                },
                "grouping": {
                  "type": "string",
                  "example": "TS32L02HBLK"
                },
                "lineNumber": {
                  "type": "string",
                  "example": "32L02HBLK"
                },
                "colour": {
                  "type": "string",
                  "example": "BLACK"
                },
                "name": {
                  "type": "string",
                  "example": "LILAH Pony Platforms"
                },
                "description": {
                  "type": "string",
                  "example": "&#39;70s platforms keep it fresh with this pony and croc-effect pair. An ultra high heel with an adjustable ankle strap fastening. Heel height - 5 inches. 80% Polyurethane, 20% Leather. Specialist leather clean only.  "
                },
                "unitPrice": {
                  "type": "string",
                  "example": "43.74"
                },
                "stockEmail": {
                  "type": "boolean",
                  "example": false
                },
                "storeDelivery": {
                  "type": "boolean",
                  "example": true
                },
                "stockThreshold": {
                  "type": "number",
                  "example": 0
                },
                "wcsColourKey": {
                  "type": "string",
                  "example": "96454425"
                },
                "wcsColourADValueId": {
                  "type": "string",
                  "example": "BLACK"
                },
                "wcsSizeKey": {
                  "type": "string",
                  "example": "96454426"
                },
                "assets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/productAssets"
                  }
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdpProductSizesAndQuantities"
                  }
                },
                "bundleProducts": {
                  "type": "array",
                  "items": {}
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "COLOUR_CODE": {
                      "type": "string",
                      "example": "000080"
                    },
                    "hasVideo": {
                      "type": "string",
                      "example": "N"
                    },
                    "ProductDefaultCopy": {
                      "type": "string",
                      "example": ""
                    },
                    "b_has360": {
                      "type": "string",
                      "example": "N"
                    },
                    "SearchKeywords": {
                      "type": "string",
                      "example": ""
                    },
                    "has360": {
                      "type": "string",
                      "example": "N"
                    },
                    "countryExclusion": {
                      "type": "string",
                      "example": ""
                    },
                    "STYLE_CODE": {
                      "type": "string",
                      "example": "NO_SWATCH_3863124"
                    },
                    "ECMC_PROD_COLOUR_1": {
                      "type": "string",
                      "example": "BLACK"
                    },
                    "StyleCode": {
                      "type": "string",
                      "example": "0"
                    },
                    "b_hasImage": {
                      "type": "string",
                      "example": "N"
                    },
                    "IFSeason": {
                      "type": "string",
                      "example": "AW15"
                    },
                    "NotifyMe": {
                      "type": "string",
                      "example": "N"
                    },
                    "ecmcCreatedTimestamp": {
                      "type": "string",
                      "example": "2015-06-17-13.21.33.000867"
                    },
                    "b_thumbnailImageSuffixes": {
                      "type": "string",
                      "example": ""
                    },
                    "shopTheOutfitBundleCode": {
                      "type": "string",
                      "example": ""
                    },
                    "ECMC_PROD_SIZE_GUIDE_1": {
                      "type": "string",
                      "example": "Shoes"
                    },
                    "thumbnailImageSuffixes": {
                      "type": "string",
                      "example": "_|_2|_3|_4"
                    },
                    "EmailBackInStock": {
                      "type": "string",
                      "example": "N"
                    },
                    "ecmcUpdatedTimestamp": {
                      "type": "string",
                      "example": "2015-10-29-11.58.44.000100"
                    },
                    "SizeFit": {
                      "type": "string",
                      "example": ""
                    },
                    "STORE_DELIVERY": {
                      "type": "string",
                      "example": "true"
                    },
                    "Department": {
                      "type": "string",
                      "example": "32"
                    },
                    "ECMC_PROD_PRODUCT_TYPE_1": {
                      "type": "string",
                      "example": "Shoes"
                    },
                    "CE3ThumbnailSuffixes": {
                      "type": "string",
                      "example": ""
                    },
                    "CE3BThumbnailSuffixes": {
                      "type": "string",
                      "example": ""
                    },
                    "ThresholdMessage": {
                      "type": "string",
                      "example": ""
                    },
                    "b_hasVideo": {
                      "type": "string",
                      "example": "N"
                    }
                  }
                }
              }
            },
            "colourSwatches": {
              "type": "array",
              "items": {}
            },
            "tpmLinks": {
              "type": "array",
              "items": {}
            },
            "bundleSlots": {
              "type": "array",
              "items": {}
            },
            "sourceUrl": {
              "type": "string",
              "example": "http://ts.pplive.arcadiagroup.ltd.uk/en/tsuk/product/lilah-pony-platforms-4893997"
            },
            "ageVerificationRequired": {
              "type": "boolean",
              "example": false
            },
            "isBundleOrOutfit": {
              "type": "boolean",
              "example": false
            },
            "productDataQuantity": {
              "type": "object",
              "properties": {
                "colourAttributes": {
                  "type": "object",
                  "properties": {
                    "attrName": {
                      "type": "string",
                      "example": "96454425"
                    },
                    "attrValue": {
                      "type": "string",
                      "example": "BLACK"
                    }
                  }
                },
                "quantities": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "example": 4
                  }
                },
                "inventoryPositions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/inventoryPositions"
                  }
                },
                "SKUs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "skuid": {
                        "type": "string",
                        "example": "20298287"
                      },
                      "value": {
                        "type": "string",
                        "example": "36"
                      },
                      "availableinventory": {
                        "type": "string",
                        "example": "4"
                      },
                      "partnumber": {
                        "type": "string",
                        "example": "602015000851659"
                      },
                      "attrName": {
                        "type": "string",
                        "example": "9645442"
                      }
                    }
                  }
                }
              }
            },
            "CEProductEspotCol1Pos1": {
              "type": "string",
              "example": "mobilePDPESpotPos2"
            },
            "additionalAssets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "assetType": {
                    "type": "string",
                    "enum": [
                      "IMAGE_ZOOM",
                      "IMAGE_2COL",
                      "IMAGE_3COL",
                      "IMAGE_4COL"
                    ],
                    "example": "IMAGE_ZOOM"
                  },
                  "index": {
                    "type": "number",
                    "example": 1
                  },
                  "url": {
                    "type": "string",
                    "example": "TS32L02HBLK_Zoom__"
                  }
                }
              }
            },
            "wasPrice": {
              "type": "string",
              "example": "60.00"
            },
            "wasWasPrice": {
              "type": "string",
              "example": "48.60"
            },
            "jsessionid": {
              "type": "string",
              "example": "0000IIzdjn6oktpUS_qvTjQTjg_"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "operationId": "get#/api/products/filter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "type": "string",
            "name": "seoUrl",
            "in": "query",
            "required": true,
            "description": "Seo url to apply filter",
            "example": "/en/tsuk/category/clothing-427/dresses-442/mini/N-85cZr7lZdgl?siteId=%2F12556&Nrpp=24&pageSize=24&categoryId=208523"
          }
        ],
        "summary": "Get products based on a filter query",
        "responses": {
          "200": {
            "description": "Listing of products matching the search query",
            "schema": {
              "type": "object",
              "properties": {
                "breadcrumbs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Home"
                      }
                    }
                  }
                },
                "canonicalUrl": {
                  "type": "string",
                  "example": "http://ts.pplive.arcadiagroup.ltd.uk"
                },
                "categoryDescription": {
                  "type": "string",
                  "example": ""
                },
                "categoryRefinement": {
                  "type": "object",
                  "properties": {
                    "refinementOptions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "categoryTitle": {
                  "type": "string",
                  "example": "gladiator"
                },
                "cmsPage": {
                  "type": "object",
                  "properties": {}
                },
                "jessionid": {
                  "type": "string",
                  "example": "00006QaC9CFgxWB0y-Pl37TS479"
                },
                "plpContentSlot": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/plpProducts"
                  }
                },
                "recordSpotlight": {
                  "type": "object",
                  "properties": {}
                },
                "refinements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/plpRefinements"
                  }
                },
                "searchTerm": {
                  "type": "string",
                  "example": "gladiator"
                },
                "sortOptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Best Match"
                      },
                      "value": {
                        "type": "string",
                        "example": "Relevance"
                      }
                    }
                  }
                },
                "tacticalEspot": {
                  "type": "object",
                  "properties": {
                    "isJsonFormat": {
                      "type": "boolean",
                      "example": true
                    },
                    "espotContents": {
                      "type": "object",
                      "properties": {
                        "pageId": {
                          "type": "string",
                          "example": "116870"
                        },
                        "pageName": {
                          "type": "string",
                          "example": "Mobile PLP POS1 eSpot"
                        },
                        "baseline": {
                          "type": "string",
                          "example": "29"
                        },
                        "pageLastPublished": {
                          "type": "string",
                          "example": "2017-05-25 09:48:22.18484"
                        },
                        "pagePublishedBy": {
                          "type": "string",
                          "example": "Jake Stewart"
                        },
                        "contentPath": {
                          "type": "string",
                          "example": "/cms/pages/json/json-0000116870/json-0000116870.json"
                        },
                        "seoUrl": {
                          "type": "string",
                          "example": ""
                        },
                        "templateName": {
                          "type": "string",
                          "example": "Mobile Feature Page Data (REF 0000012221)"
                        },
                        "templatePublishDate": {
                          "type": "string",
                          "example": "2016-05-12 10:31:10.363931"
                        },
                        "site": {
                          "type": "string",
                          "example": "TSUK"
                        },
                        "type": {
                          "type": "string",
                          "example": "Page"
                        },
                        "version": {
                          "type": "string",
                          "example": "0"
                        },
                        "pageData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "imagelist"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "options": {
                                    "type": "object"
                                  },
                                  "columns": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "assets": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "target": {
                                          "type": "string",
                                          "example": ""
                                        },
                                        "alt": {
                                          "type": "string",
                                          "example": "Shipping Upgrade"
                                        },
                                        "link": {
                                          "type": "string",
                                          "example": "/en/tsuk/category/uk-delivery-4043283/home?TS=1421171569402&amp;cat2=2141530&amp;intcmpid=mobile_PLP_Delivery"
                                        },
                                        "source": {
                                          "type": "string",
                                          "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/ConsumerDirectStorefrontAssetStore/images/colors/color7/cms/pages/json/json-0000116870/images/Monty-PLP-UK.svg"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalProducts": {
                          "type": "number",
                          "example": 40
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/promo": {
      "get": {
        "operationId": "get#/api/products/promo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "promoId",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "summary": "Gets a list of products for a promotion",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/seemore": {
      "get": {
        "operationId": "get#/api/products/seemore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "endecaUrl",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "summary": "Gets a list of products for a promotion",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/quickview": {
      "get": {
        "operationId": "get#/api/products/quickview",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "productId",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "summary": "Get the quickview of a product",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products/stock": {
      "get": {
        "operationId": "get#/api/products/stock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get items portion of pdp response",
        "responses": {
          "200": {
            "description": "The items array",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "item": {
                    "type": "object",
                    "properties": {
                      "attrName": {
                        "type": "string",
                        "example": "179008748"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": "10"
                      },
                      "catEntryId": {
                        "type": "integer",
                        "example": "31076660"
                      },
                      "attrValueId": {
                        "type": "integer",
                        "example": "251124643"
                      },
                      "selected": {
                        "type": "boolean",
                        "example": "true"
                      },
                      "stockText": {
                        "type": "string",
                        "example": "In stock"
                      },
                      "size": {
                        "type": "string",
                        "example": "41"
                      },
                      "sku": {
                        "type": "string",
                        "example": "602018001201770"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "operationId": "get#/api/account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Account details for a user that has logged in",
        "responses": {
          "200": {
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. `authenticated` cookie set to `yes` when the user has successfully authenticated"
              }
            },
            "description": "Account details object",
            "schema": {
              "type": "object",
              "properties": {
                "basketItemCount": {
                  "type": "number",
                  "example": 3
                },
                "billingDetails": {
                  "type": "object",
                  "properties": {
                    "addressDetailsId": {
                      "type": "string",
                      "example": "789993"
                    },
                    "nameAndPhone": {
                      "type": "object",
                      "properties": {
                        "lastName": {
                          "type": "string",
                          "example": "asdfdsaf"
                        },
                        "telephone": {
                          "type": "string",
                          "example": "1231231231"
                        },
                        "title": {
                          "type": "string",
                          "example": "Mr"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "asfdds"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "3 Essex Road"
                        },
                        "address2": {
                          "type": "string",
                          "example": ""
                        },
                        "city": {
                          "type": "string",
                          "example": "LONDON"
                        },
                        "state": {
                          "type": "string",
                          "example": ""
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "postcode": {
                          "type": "string",
                          "example": "E12 6RF"
                        }
                      }
                    }
                  }
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "VISA"
                    },
                    "cardNumberHash": {
                      "type": "string",
                      "example": "tjOBl4zzS+ueTZQWartO5l968iOmCOix"
                    },
                    "cardNumberStar": {
                      "type": "string",
                      "example": "************1111"
                    },
                    "expiryMonth": {
                      "type": "string",
                      "example": "02"
                    },
                    "expiryYear": {
                      "type": "string",
                      "example": "2018"
                    }
                  }
                },
                "deliveryDetails": {
                  "type": "object",
                  "properties": {
                    "addressDetailsId": {
                      "type": "number",
                      "example": 789993
                    },
                    "nameAndPhone": {
                      "type": "object",
                      "properties": {
                        "lastName": {
                          "type": "string",
                          "example": "asdfdsaf"
                        },
                        "telephone": {
                          "type": "string",
                          "example": "1231231231"
                        },
                        "title": {
                          "type": "string",
                          "example": "Mr"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "asfdds"
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "3 Essex Road"
                        },
                        "address2": {
                          "type": "string",
                          "example": ""
                        },
                        "city": {
                          "type": "string",
                          "example": "LONDON"
                        },
                        "state": {
                          "type": "string",
                          "example": ""
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "postcode": {
                          "type": "string",
                          "example": "E12 6RF"
                        }
                      }
                    }
                  }
                },
                "email": {
                  "type": "text",
                  "example": "monty@desktop.com"
                },
                "exists": {
                  "type": "boolean",
                  "example": true
                },
                "firstName": {
                  "type": "string",
                  "example": "asdfdsaf"
                },
                "lastName": {
                  "type": "string",
                  "example": "adsfdsaf"
                },
                "subscriptionId": {
                  "type": "number",
                  "example": 2051366
                },
                "title": {
                  "type": "string",
                  "example": "Mr"
                },
                "userTrackingId": {
                  "type": "number",
                  "example": 1221110
                },
                "expId1": {
                  "type": "string",
                  "example": "ba01f790419dc0f27b69b4184943286dd0e738ff8dbf4287d138c0cb0409ba09",
                  "description": "hash of email_id for exponea"
                },
                "expId2": {
                  "type": "string",
                  "example": "8335c4e067a04af8a4cdb3aa688379d7e3e2625e0c1e7e39e7024bf21ba7bf57",
                  "description": "hash of member_id for exponea"
                },
                "isDDPUser": {
                  "type": "boolean",
                  "example": true,
                  "description": "is the user currently a ddp user"
                },
                "isDDPRenewable": {
                  "type": "boolean",
                  "example": false,
                  "description": "is the user able to renew their expired or expiring ddp subscription. Becomes active when the user has 1 month remaining on their current subscription."
                },
                "ddpStartDate": {
                  "type": "string",
                  "example": "5 July 2020",
                  "description": "When did their DDP subscription start."
                },
                "ddpEndDate": {
                  "type": "string",
                  "example": "5 July 2020",
                  "description": "When will their DDP subscription end."
                },
                "wasDDPUser": {
                  "type": "boolean",
                  "example": false,
                  "description": "Has the user ever had DDP?"
                },
                "ddpCurrentOrderCount": {
                  "type": "number",
                  "example": 3,
                  "description": "How many order has the user placed during their current DDP subscription"
                },
                "ddpPreviousOrderCount": {
                  "type": "number",
                  "example": 0,
                  "description": "How many order has the user placed during their previous DDP subscription"
                },
                "ddpCurrentSaving": {
                  "type": "number",
                  "example": 12.05,
                  "description": "Approximate amount of savings accrued by the DDP User during their current DDP subscription."
                },
                "ddpPreviouSaving": {
                  "type": "number",
                  "example": 0,
                  "description": "Approximate amount of savings accrued by the DDP User during their previous DDP subscription."
                },
                "ddpStandardPrice": {
                  "type": "number",
                  "example": 5.95,
                  "description": "Standard price of DDP for this brand."
                },
                "ddpExpressDeliveryPrice": {
                  "type": "number",
                  "example": 6,
                  "description": "Standard cost of express delivery for this brand."
                }
              }
            }
          }
        }
      }
    },
    "/api/account/register": {
      "post": {
        "operationId": "post#/api/account/register",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Account register credentials",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "passwordConfirm",
                "subscribe"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "monty@desktop.com"
                },
                "password": {
                  "type": "string",
                  "example": "test123"
                },
                "passwordConfirm": {
                  "type": "string",
                  "example": "test123"
                },
                "subscribe": {
                  "type": "boolean",
                  "example": false
                },
                "appId": {
                  "type": "string",
                  "example": "407090000"
                },
                "rememberMe": {
                  "type": "boolean",
                  "example": false
                },
                "source": {
                  "type": "string",
                  "description": "Idenifies the page this request was made from",
                  "example": "CHECKOUT"
                }
              }
            }
          }
        ],
        "summary": "Register a new user account",
        "responses": {
          "200": {
            "description": "New account summary",
            "schema": {
              "type": "object",
              "properties": {
                "basketItemCount": {
                  "type": "number",
                  "example": 0
                },
                "billingDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "creditCard": {
                  "type": "object",
                  "example": {
                    "type": "VISA",
                    "cardNumberHash": "tjOBl4zzS+ueTZQWartO5l968iOmCOix",
                    "cardNumberStar": "************1111",
                    "expiryMonth": "02",
                    "expiryYear": "2018"
                  }
                },
                "deliveryDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "email": {
                  "type": "string",
                  "example": "monty@desktop.com"
                },
                "exists": {
                  "type": "boolean",
                  "example": true
                },
                "firstName": {
                  "type": "string",
                  "example": "Asdf"
                },
                "hasBillingDetails": {
                  "type": "boolean",
                  "example": false
                },
                "hasCardNumberHash": {
                  "type": "boolean",
                  "example": false
                },
                "hasDeliveryDetails": {
                  "type": "boolean",
                  "example": false
                },
                "hasPaypal": {
                  "type": "boolean",
                  "example": false
                },
                "lastName": {
                  "type": "string",
                  "example": "asdfasdf"
                },
                "title": {
                  "type": "string",
                  "example": "Mr"
                },
                "userTrackingId": {
                  "type": "number",
                  "example": 2470078
                },
                "userToken": {
                  "type": "string",
                  "example": "a1b2c3d41531130353",
                  "description": "Only returned when the appId has been provided in the request"
                },
                "userId": {
                  "type": "number",
                  "example": 3639011,
                  "description": "Only returned when the appId has been provided in the request"
                },
                "expId1": {
                  "type": "string",
                  "example": "ba01f790419dc0f27b69b4184943286dd0e738ff8dbf4287d138c0cb0409ba09",
                  "description": "hash of email_id for exponea"
                },
                "expId2": {
                  "type": "string",
                  "example": "8335c4e067a04af8a4cdb3aa688379d7e3e2625e0c1e7e39e7024bf21ba7bf57",
                  "description": "hash of member_id for exponea"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "operationId": "post#/api/account/login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Logon credentials",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "monty@desktop.com"
                },
                "password": {
                  "type": "string",
                  "example": "passw0rd"
                },
                "rememberMe": {
                  "type": "boolean",
                  "example": false
                },
                "appId": {
                  "type": "string",
                  "description": "Only required for native app consumers to start persistent auth"
                },
                "userToken": {
                  "type": "string",
                  "description": "Only required for native app consumers to start persistent auth"
                },
                "userId": {
                  "type": "number",
                  "description": "Only required for native app consumers to start persistent auth"
                }
              }
            }
          }
        ],
        "summary": "Log on an authenticated user",
        "responses": {
          "200": {
            "description": "Account details object",
            "schema": {
              "$ref": "#/definitions/account"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. `authenticated` cookie set to `yes` when the user has successfully authenticated"
              }
            }
          },
          "401": {
            "description": "Invalid authentication attempt due to wrong username/password combo",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 401
                },
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "message": {
                  "type": "string",
                  "example": "The email address or password you entered has not been found. Please enter them again."
                },
                "wcsErrorCode": {
                  "type": "string",
                  "example": "2030"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "403": {
            "description": "When a user fails to authenticate a number of times then a 30s waiting period between attempts is introduced",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 403
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "message": {
                  "type": "string",
                  "example": "Please wait 30 seconds before attempting to log in again."
                },
                "wcsErrorCode": {
                  "type": "string",
                  "example": "2301"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Authentication failure",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "The email address or password you entered has not been found. Please enter them again."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "423": {
            "description": "Too many invalid authentication attempts causing the account to be locked",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 423
                },
                "error": {
                  "type": "string",
                  "example": "Locked"
                },
                "message": {
                  "type": "string",
                  "example": "Due to unsuccessful password attempts, you will be unable to logon. Please contact Customer Services to unlock your account."
                },
                "wcsErrorCode": {
                  "type": "string",
                  "example": "2110"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/logout": {
      "delete": {
        "operationId": "delete#/api/account/logout",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "appId": {
                  "type": "string",
                  "description": "App id assigned to a native app",
                  "example": "0000Skr6gZ7X2GaSI80fK3c0U0U"
                },
                "userId": {
                  "type": "string",
                  "description": "User id assigned to a native app session",
                  "example": 12345
                },
                "userToken": {
                  "type": "string",
                  "description": "Token assigned to a native app session",
                  "example": "0000Skr6gZ7X2GaSI80fK3c0U0H"
                }
              }
            }
          }
        ],
        "summary": "Log out an authenticated user",
        "responses": {
          "200": {
            "description": "User successfully logged out",
            "schema": {
              "type": "object",
              "properties": {
                "jsessionid": {
                  "type": "string",
                  "example": "0000Fxe6tM7K2TnFV80sX3p0H0H"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/changepassword": {
      "put": {
        "operationId": "put#/api/account/changepassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Password change form data",
            "schema": {
              "type": "object",
              "properties": {
                "emailAddress": {
                  "type": "string",
                  "example": "foo@bar.com"
                },
                "oldPassword": {
                  "type": "string",
                  "example": "passw0rd"
                },
                "newPassword": {
                  "type": "string",
                  "example": "muchStr0ngerPassw0rd"
                },
                "newPasswordConfirm": {
                  "type": "string",
                  "example": "muchStr0ngerPassw0rd"
                },
                "appId": {
                  "type": "string",
                  "description": "App id assigned to a native app"
                },
                "userId": {
                  "type": "string",
                  "description": "User id assigned to a native app session"
                },
                "userToken": {
                  "type": "string",
                  "description": "Token assigned to a native app session"
                }
              }
            }
          }
        ],
        "summary": "Change a registered user's password while they are logged in",
        "responses": {
          "200": {
            "description": "Account details object",
            "schema": {
              "$ref": "#/definitions/account"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Reset password failure",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "Please enter your correct password in current password field."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/forgetpassword": {
      "post": {
        "operationId": "post#/api/account/forgetpassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Email for account whose password is to be changed",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "foo@bar.com"
                }
              }
            }
          }
        ],
        "summary": "Request an email that sets the password to a temporary one, allowing it to be changed",
        "responses": {
          "200": {
            "description": "Email successfully requested",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your password has been reset successfully. A new password has been e-mailed to you and should arrive shortly."
                },
                "originalMessage": {
                  "type": "string",
                  "example": "Your password has been reset successfully. A new password has been e-mailed to you and should arrive shortly."
                },
                "additionalData": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "validationErrors": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Account doesn't exist",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "There is no account with that email address in our records. If you would like to use that email address, you can create an account with the New customers section of this page."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/reset_password": {
      "put": {
        "operationId": "put#/api/account/reset_password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "passwordConfirm",
                "hash"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "monty@desktop.com"
                },
                "password": {
                  "type": "string",
                  "example": "test123"
                },
                "passwordConfirm": {
                  "type": "string",
                  "example": "test123"
                },
                "hash": {
                  "type": "string",
                  "example": "hgGRUeUADRx22d30hObimDteMy4%3D%0A"
                },
                "orderId": {
                  "type": "number",
                  "example": "7282281"
                }
              }
            }
          }
        ],
        "summary": "Reset the user password from a reset password page linked to from an email",
        "responses": {
          "200": {
            "description": "Acccount summary",
            "schema": {
              "type": "object",
              "properties": {
                "basketItemCount": {
                  "type": "number",
                  "example": 0
                },
                "billingDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "creditCard": {
                  "type": "object",
                  "example": {
                    "type": "VISA",
                    "cardNumberHash": "tjOBl4zzS+ueTZQWartO5l968iOmCOix",
                    "cardNumberStar": "************1111",
                    "expiryMonth": "02",
                    "expiryYear": "2018"
                  }
                },
                "deliveryDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "email": {
                  "type": "string",
                  "example": "monty@desktop.com"
                },
                "exists": {
                  "type": "boolean",
                  "example": true
                },
                "userTrackingId": {
                  "type": "number",
                  "example": 2470078
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/validate_reset_password": {
      "post": {
        "operationId": "post#/api/account/validate_reset_password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/reset_password_link": {
      "post": {
        "operationId": "post#/api/account/reset_password_link",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Email for account whose password is to be changed",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "foo@bar.com"
                }
              }
            }
          }
        ],
        "summary": "Request a password reset email containing a link to reset the password",
        "responses": {
          "200": {
            "description": "New account summary",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Thanks! We've sent you an email. It should arrive in a couple of minutes - be sure to check your junk folder just in case."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/customerdetails": {
      "put": {
        "operationId": "put#/api/account/customerdetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Address and payment details",
            "schema": {
              "type": "object",
              "properties": {
                "billingDetails": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "123 Foobar House"
                        },
                        "address2": {
                          "type": "string",
                          "example": "Batbaz street"
                        },
                        "city": {
                          "type": "string",
                          "example": "Qux"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "postcode": {
                          "type": "string",
                          "example": "CT1 3PW"
                        },
                        "state": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    },
                    "nameAndPhone": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "Bob"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Barker"
                        },
                        "telephone": {
                          "type": "string",
                          "example": "0123456790"
                        },
                        "title": {
                          "type": "string",
                          "example": "Mr"
                        }
                      }
                    }
                  }
                },
                "deliveryDetails": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "123 Foobar House"
                        },
                        "address2": {
                          "type": "string",
                          "example": "Batbaz street"
                        },
                        "city": {
                          "type": "string",
                          "example": "Qux"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "postcode": {
                          "type": "string",
                          "example": "CT1 3PW"
                        },
                        "state": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    },
                    "nameAndPhone": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "Bob"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Barker"
                        },
                        "telephone": {
                          "type": "string",
                          "example": "0123456790"
                        },
                        "title": {
                          "type": "string",
                          "example": "Mr"
                        }
                      }
                    }
                  }
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "cardNumber": {
                      "type": "string",
                      "example": "1234123412341234"
                    },
                    "cardMonth": {
                      "type": "string",
                      "example": "2"
                    },
                    "expiryYear": {
                      "type": "string",
                      "example": "2020"
                    },
                    "type": {
                      "type": "string",
                      "example": "VISA"
                    }
                  }
                }
              }
            }
          }
        ],
        "summary": "Update both the billing and delivery details of a registered user (Currently sets both to the same address)",
        "responses": {
          "200": {
            "description": "Account details object",
            "schema": {
              "$ref": "#/definitions/account"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Authentication failure",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "Please enter a valid state."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/shortdetails": {
      "put": {
        "operationId": "put#/api/account/shortdetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Bob"
                },
                "lastName": {
                  "type": "string",
                  "example": "Barker"
                },
                "title": {
                  "type": "string",
                  "example": "Mr"
                },
                "email": {
                  "type": "string",
                  "example": "foo@bar.com"
                },
                "marketingSubscription": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "summary": "Update a user's name and email address",
        "responses": {
          "200": {
            "description": "Account details object",
            "schema": {
              "$ref": "#/definitions/account"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "User attempted to update profile when session expired",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "text",
                  "example": "Unprocessable Entity"
                },
                "originalMessage": {
                  "type": "text",
                  "example": "Must be logged in to perform this action"
                },
                "message": {
                  "type": "text",
                  "example": "Must be logged in to perform this action"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/order-history": {
      "get": {
        "operationId": "get#/api/account/order-history",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get a summary of previous orders made by a customer",
        "responses": {
          "200": {
            "description": "Details of previous orders",
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "number",
                        "example": 700286041
                      },
                      "date": {
                        "type": "string",
                        "example": ""
                      },
                      "total": {
                        "type": "string",
                        "example": "£38.00"
                      },
                      "statusCode": {
                        "type": "string",
                        "example": "X"
                      },
                      "status": {
                        "type": "string",
                        "example": "Your order has been cancelled."
                      },
                      "returnPossible": {
                        "type": "boolean",
                        "example": false
                      },
                      "returnRequested": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/order-history/{orderId}": {
      "get": {
        "operationId": "get#/api/account/order-history/{orderId}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "example": "12345678"
          }
        ],
        "summary": "Get the details of a specific order a customer has made",
        "responses": {
          "200": {
            "description": "Details of a previous order",
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "string",
                  "example": "700285030"
                },
                "subtotal": {
                  "type": "string",
                  "example": "36.00"
                },
                "statusCode": {
                  "type": "string",
                  "enum": [
                    "C",
                    "W",
                    "M",
                    "G",
                    "S",
                    "c",
                    "r",
                    "i",
                    "D",
                    "X"
                  ],
                  "description": "Unique character idenitfier for a status\n              * `C` - Your order is currently being packed by our warehouse\n              * `W` - Pending Fraud Check\n              * `M` - Pending Payment Authorisation\n              * `G` - Order Shipment delayed\n              * `S` - Shipped\n              * `c` - Collected\n              * `r` - returned to stock\n              * `i` - Ready to Collect\n              * `D` - Dispatched\n              * `X` - Your order has been cancelled\n            "
                },
                "isOrderFullyRefunded": {
                  "type": "boolean",
                  "example": false,
                  "description": "Flag to determine if all items in order have been refunded i.e. user cannot start a new return"
                },
                "status": {
                  "type": "string",
                  "example": "Your order has been cancelled."
                },
                "returnPossible": {
                  "type": "boolean",
                  "example": false
                },
                "returnRequested": {
                  "type": "boolean",
                  "example": false
                },
                "deliveryMethod": {
                  "type": "string",
                  "example": "Standard Delivery"
                },
                "deliveryType": {
                  "type": "string",
                  "example": "H",
                  "description": "Different delivery types\n            * H - Home delivery\n            * P - Parcel\n            * S - Collect from store\n            "
                },
                "deliveryDate": {
                  "type": "string",
                  "example": "Monday 2 October 2017"
                },
                "deliveryCost": {
                  "type": "string",
                  "example": "4.00"
                },
                "deliveryCarrier": {
                  "type": "string",
                  "example": "Parcelnet"
                },
                "deliveryPrice": {
                  "type": "string",
                  "example": "4.00"
                },
                "totalOrderPrice": {
                  "type": "string",
                  "example": "38.00"
                },
                "totalOrdersDiscount": {
                  "type": "string",
                  "example": "-2.00"
                },
                "billingAddress": {
                  "$ref": "#/definitions/orderAddress"
                },
                "deliveryAddress": {
                  "$ref": "#/definitions/orderAddress"
                },
                "orderLines": {
                  "$ref": "#/definitions/orderLines"
                },
                "paymentDetails": {
                  "$ref": "#/definitions/paymentDetails"
                },
                "discounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Monty Test 7p off"
                      },
                      "value": {
                        "type": "string",
                        "example": "0.07"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/return-history": {
      "get": {
        "operationId": "get#/api/account/return-history",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get a list of returns that the session's registered user has on their account",
        "responses": {
          "200": {
            "description": "Array of returns",
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "number",
                        "example": 1646640
                      },
                      "date": {
                        "type": "string",
                        "example": "02 August 2017"
                      },
                      "status": {
                        "type": "string",
                        "example": "Awaiting Refund"
                      },
                      "statusCode": {
                        "type": "string",
                        "example": "D"
                      },
                      "total": {
                        "type": "string",
                        "example": "£31.00"
                      },
                      "rmaId": {
                        "type": "number",
                        "example": 96507
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/account/return-history/{orderId}/{rmaId}": {
      "get": {
        "operationId": "get#/api/account/return-history/{orderId}/{rmaId}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "rmaId",
            "in": "query",
            "type": "number",
            "required": true,
            "description": "Internal return id assigned to the order"
          },
          {
            "name": "orderId",
            "in": "query",
            "type": "number",
            "required": true,
            "description": "Internal identification number assigned to the order"
          }
        ],
        "summary": "Get details of a specific return a session's registered user has on their account",
        "responses": {
          "200": {
            "descripton": "Summary of a specific return",
            "schema": {
              "type": "object",
              "properties": {
                "rmaId": {
                  "type": "number",
                  "example": 91506
                },
                "orderId": {
                  "type": "number",
                  "example": 1473808
                },
                "subTotal": {
                  "type": "string",
                  "example": "20.00"
                },
                "deliveryPrice": {
                  "type": "string",
                  "example": "0.00"
                },
                "totalOrderPrice": {
                  "type": "string",
                  "example": "18.00"
                },
                "totalOrdersDiscountLabel": {
                  "type": "string",
                  "example": ""
                },
                "totalOrdersDiscount": {
                  "type": "string",
                  "example": "-2.00"
                },
                "orderLines": {
                  "$ref": "#/definitions/orderLines"
                },
                "paymentDetails": {
                  "$ref": "#/definitions/paymentDetails"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/navigation/categories": {
      "get": {
        "operationId": "get#/api/navigation/categories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get a list of categories to populate the navigation menu",
        "responses": {
          "200": {
            "description": "Main site navigation array",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "navigationEntryType": {
                    "type": "string",
                    "example": "NAV_ENTRY_TYPE_CATEGORY"
                  },
                  "index": {
                    "type": "number",
                    "example": 1
                  },
                  "label": {
                    "type": "string",
                    "example": "Shop By Category"
                  },
                  "categoryId": {
                    "type": "number",
                    "example": 3370518
                  },
                  "categoryFilter": {
                    "type": "string",
                    "example": "3370518"
                  },
                  "seoUrl": {
                    "type": "string",
                    "example": "/en/tsuk/category/shop-by-category-5634548"
                  },
                  "navigationEntries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "navigationEntryType": {
                          "type": "string",
                          "example": "NAV_ENTRY_TYPE_CATEGORY"
                        },
                        "index": {
                          "type": "number",
                          "example": 1
                        },
                        "label": {
                          "type": "string",
                          "example": "New In Fashion"
                        },
                        "categoryId": {
                          "type": "number",
                          "example": 3370518
                        },
                        "categoryFilter": {
                          "type": "string",
                          "example": "3370518"
                        },
                        "seoUrl": {
                          "type": "string",
                          "example": "/en/tsuk/category/shop-by-category-5634548"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/add_item": {
      "post": {
        "operationId": "post#/api/shopping_bag/add_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "sku": {
                  "type": "string"
                },
                "responseType": {
                  "type": "string",
                  "required": false,
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Add a product (SKU) to the basket",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/add_item2": {
      "post": {
        "operationId": "post#/api/shopping_bag/add_item2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "integer"
                },
                "catEntryId": {
                  "type": "integer"
                },
                "partNumber": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "isDDPProduct": {
                  "type": "boolean"
                },
                "required": [
                  "productId",
                  "partNumber",
                  "quantity",
                  "sku",
                  "isSingleItem",
                  "isDDPProduct"
                ],
                "bundleItems": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "catEntryId": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "productId",
                      "sku"
                    ]
                  }
                },
                "responseType": {
                  "type": "string",
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Add a product (SKU) to the basket",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/get_items": {
      "get": {
        "operationId": "get#/api/shopping_bag/get_items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get the basket",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/delete_item": {
      "delete": {
        "operationId": "delete#/api/shopping_bag/delete_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "orderId",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "orderItemId",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "responseType",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "orderSummary"
          },
          {
            "name": "isDDPItem",
            "in": "query",
            "type": "boolean",
            "required": false
          }
        ],
        "summary": "Remove an item from the basket",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/transfer": {
      "post": {
        "operationId": "post#/api/shopping_bag/transfer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "transferStoreID",
            "in": "payload",
            "type": "string",
            "required": true
          },
          {
            "name": "transferOrderID",
            "in": "payload",
            "type": "string",
            "required": true
          }
        ],
        "summary": "Transfers a basket to the current basket",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/addPromotionCode": {
      "post": {
        "operationId": "post#/api/shopping_bag/addPromotionCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "promotionId"
              ],
              "properties": {
                "promotionId": {
                  "type": "string",
                  "example": "12345"
                },
                "responseType": {
                  "type": "string",
                  "required": false,
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Add a promotional code",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Invalid promo code",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "The promotion code you have entered has not been recognised. Please confirm the code and try again."
                },
                "originalMessage": {
                  "type": "string",
                  "example": "The promotion code you have entered has not been recognised. Please confirm the code and try again."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/delPromotionCode": {
      "delete": {
        "operationId": "delete#/api/shopping_bag/delPromotionCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "promotionCode"
              ],
              "properties": {
                "promotionCode": {
                  "type": "string"
                },
                "responseType": {
                  "type": "string",
                  "required": false,
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Delete a promotion code",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/update_item": {
      "put": {
        "operationId": "put#/api/shopping_bag/update_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "catEntryIdToAdd": {
                  "type": "integer",
                  "format": "int32"
                },
                "catEntryIdToDelete": {
                  "type": "integer",
                  "format": "int32"
                },
                "quantity": {
                  "type": "string"
                },
                "responseType": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "summary": "Update an item's quantity, size or colour",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/delivery": {
      "put": {
        "operationId": "put#/api/shopping_bag/delivery",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deliveryOptionId": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "summary": "Update the delivery type",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/fetch_item_sizes_and_quantities": {
      "get": {
        "operationId": "get#/api/shopping_bag/fetch_item_sizes_and_quantities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "catEntryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The catEntryId of the product to be queried"
          }
        ],
        "summary": "Get available sizes and quantities for a particular item.",
        "responses": {
          "200": {
            "description": "List of other variants of the same item",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "string",
                    "example": "37"
                  },
                  "quantity": {
                    "type": "number",
                    "example": 20
                  },
                  "catEntryId": {
                    "type": "number",
                    "example": 12345678
                  },
                  "selected": {
                    "type": "boolean",
                    "example": true
                  },
                  "wasPrice": {
                    "type": "string",
                    "example": "50.00"
                  },
                  "wasWasPrice": {
                    "type": "string",
                    "example": "100.00"
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shopping_bag/mini_bag": {
      "get": {
        "operationId": "get#/api/shopping_bag/mini_bag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get the mini bag of the user",
        "responses": {
          "200": {
            "description": "MiniBag response. This is currently not transformed from WCS",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "View Minibag details."
                },
                "items": {
                  "type": "integer",
                  "example": 1
                },
                "total": {
                  "type": "number",
                  "example": 34
                },
                "orderId": {
                  "type": "number",
                  "example": 700333025
                },
                "productDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderItemId": {
                        "type": "number",
                        "example": 7715608
                      },
                      "productId": {
                        "type": "number",
                        "example": 21919934
                      },
                      "catentryId": {
                        "type": "string",
                        "example": "21919940"
                      },
                      "title": {
                        "type": "string",
                        "example": "**Suedette Tuxedo Dress by Love"
                      },
                      "imageUrl": {
                        "type": "string",
                        "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62Z39IGRY_thumb.jpg"
                      },
                      "size": {
                        "type": "string",
                        "example": "XS"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 1
                      },
                      "avlQuantity": {
                        "type": "integer",
                        "example": 4
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "was1Price": {
                            "type": "number",
                            "example": 36
                          },
                          "was2Price": {
                            "type": "number",
                            "example": 40
                          },
                          "nowPrice": {
                            "type": "number",
                            "example": 20
                          }
                        }
                      }
                    }
                  }
                },
                "espots": {
                  "type": "object",
                  "properties": {
                    "espotMiniBagBottom": {
                      "type": "string",
                      "example": "%3C%21--+Start-+JSP+File+Name%3A+eMarketingSpotDisplay.jsp+--%3E%0A%09%09%09%09%09%09%3Cdiv+class%3D%22espot_advertisement+activity_1%22%3E%0A%09%09%09%09%09%09%09%3CB%3E+Buy+products+amounting+greater+than+100+and+get+free+shipping+%3C%2FB%3E%0A%09%09%09%09%09%09%3C%2Fdiv%3E%0A%09%09%09%09%09%09%3C%21--+End+-+JSP+File+Name%3A+eMarketingSpotDisplay.jsp+--%3E"
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/site-options": {
      "get": {
        "operationId": "get#/api/site-options",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get Site Options (e.g. delivery countries, person titles)",
        "responses": {
          "200": {
            "description": "The site options",
            "schema": {
              "type": "object",
              "properties": {
                "titles": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Mr"
                  }
                },
                "billingCountries": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "United Kingdom"
                  }
                },
                "currencyCode": {
                  "type": "string",
                  "example": "GBP"
                },
                "creditCardOptions": {
                  "type": "array",
                  "item": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "example": "VISA"
                      },
                      "label": {
                        "type": "string",
                        "example": "Visa"
                      },
                      "defaultPayment": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                },
                "expiryMonths": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "02"
                  }
                },
                "expiryYears": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "2017"
                  }
                },
                "USStates": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "AL"
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/home": {
      "get": {
        "operationId": "get#/api/home",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get Home page information and espots.",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/payments": {
      "get": {
        "operationId": "get#/api/payments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "query",
            "name": "delivery",
            "description": "Delivery country name e.g. \"United Kingdom\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "billing",
            "description": "Billing country name e.g. \"United Kingdom\"",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Returns the available payment methods for the given brand code",
        "responses": {
          "200": {
            "description": "The available payment methods",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "value",
                  "type",
                  "label",
                  "description",
                  "icon",
                  "validation"
                ],
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "validation": {
                    "required": [
                      "cardNumber",
                      "cvv",
                      "expiryDate",
                      "startDate"
                    ],
                    "properties": {
                      "cardNumber": {
                        "required": [
                          "length",
                          "message"
                        ],
                        "properties": {
                          "length": {
                            "type": "number"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "cvv": {
                        "required": [
                          "length",
                          "message"
                        ],
                        "properties": {
                          "length": {
                            "type": "number"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "expiryDate": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/order": {
      "post": {
        "operationId": "post#/api/order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "Card payload - (New_User)",
            "in": "body",
            "description": "The details of the order to be processed by payment type CARD as a new customer",
            "schema": {
              "type": "object",
              "properties": {
                "billingDetails": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "postcode": {
                          "type": "string"
                        }
                      }
                    },
                    "nameAndPhone": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "telephone": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "cardCvv": {
                  "type": "string"
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "cardNumber": {
                      "type": "string"
                    },
                    "expiryMonth": {
                      "type": "string"
                    },
                    "expiryYear": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ACCNT",
                        "AMEX",
                        "MCARD",
                        "SWTCH",
                        "VISA"
                      ],
                      "example": "VISA"
                    }
                  },
                  "authToken": {
                    "type": "string"
                  }
                },
                "deliveryAddress": {
                  "type": "object",
                  "properties": {
                    "address1": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                },
                "deliveryInstructions": {
                  "type": "string"
                },
                "deliveryNameAndPhone": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "telephone": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "orderDeliveryOption": {
                  "type": "object",
                  "properties": {
                    "deliveryStoreCode": {
                      "type": "string",
                      "description": "Only for collect from store and parcel shop"
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "shipCode": {
                      "type": "string"
                    },
                    "shipModeId": {
                      "type": "string"
                    },
                    "shippingCountry": {
                      "type": "string"
                    }
                  }
                },
                "paymentType": {
                  "type": "string",
                  "enum": [
                    "ACCNT",
                    "AMEX",
                    "MCARD",
                    "SWTCH",
                    "VISA"
                  ],
                  "example": "VISA",
                  "description": "Identifies which payment card type"
                },
                "punchoutReturnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/psd2-order-punchout?orderId=8359831&paymentMethod=VISA"
                },
                "remoteIpAddress": {
                  "type": "string"
                },
                "returnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/order-complete?orderId=8359831&paymentMethod=VISA"
                },
                "save_details": {
                  "type": "boolean",
                  "example": true
                },
                "smsMobileNumber": {
                  "type": "string"
                },
                "dfReferenceId": {
                  "type": "string",
                  "description": "The SessionId returned by client-side Device Data Collection (DDC)"
                },
                "challengeWindowSize": {
                  "type": "string",
                  "enum": [
                    "fullPage",
                    "250x400",
                    "390x400",
                    "500x600",
                    "600x400"
                  ],
                  "example": "390x400",
                  "description": "Challenge Window size the issuer should use to the display the challenge"
                },
                "ddcDowngradeReason": {
                  "type": "string",
                  "enum": [
                    "DDC_RESPONSE_TIMEOUT",
                    "DDC_3DS2_UNSUPPORTED"
                  ],
                  "example": "DDC_3DS2_UNSUPPORTED",
                  "description": "Reason for Device Data Collection (DDC) initiating a security downgrade"
                }
              }
            }
          },
          {
            "name": "Card payload - (Returning User)",
            "in": "body",
            "description": "The details of the order to be processed by payment type CARD as a returning customer",
            "schema": {
              "type": "object",
              "properties": {
                "cardCvv": {
                  "type": "string"
                },
                "cardNumberHash": {
                  "type": "string",
                  "required": true
                },
                "deliveryInstructions": {
                  "type": "string"
                },
                "orderDeliveryOption": {
                  "type": "object",
                  "properties": {
                    "deliveryStoreCode": {
                      "type": "string",
                      "description": "Only for collect from store and parcel shop"
                    },
                    "orderId": {
                      "type": "string"
                    },
                    "shipCode": {
                      "type": "string"
                    },
                    "shipModeId": {
                      "type": "string"
                    },
                    "shippingCountry": {
                      "type": "string"
                    }
                  }
                },
                "paymentType": {
                  "type": "string",
                  "enum": [
                    "ACCNT",
                    "AMEX",
                    "MCARD",
                    "SWTCH",
                    "VISA"
                  ],
                  "example": "VISA",
                  "description": "Identifies which payment card type"
                },
                "punchoutReturnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/psd2-order-punchout?orderId=8359831&paymentMethod=VISA"
                },
                "remoteIpAddress": {
                  "type": "string"
                },
                "returnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/order-complete?orderId=8359831&paymentMethod=VISA"
                },
                "save_details": {
                  "type": "boolean",
                  "example": true
                },
                "smsMobileNumber": {
                  "type": "string"
                },
                "dfReferenceId": {
                  "type": "string",
                  "description": "The SessionId returned by client-side Device Data Collection (DDC)"
                },
                "challengeWindowSize": {
                  "type": "string",
                  "enum": [
                    "fullPage",
                    "250x400",
                    "390x400",
                    "500x600",
                    "600x400"
                  ],
                  "example": "390x400",
                  "description": "Challenge Window size the issuer should use to the display the challenge"
                },
                "ddcDowngradeReason": {
                  "type": "string",
                  "enum": [
                    "DDC_RESPONSE_TIMEOUT",
                    "DDC_3DS2_UNSUPPORTED"
                  ],
                  "example": "DDC_3DS2_UNSUPPORTED",
                  "description": "Reason for Device Data Collection (DDC) initiating a security downgrade"
                }
              }
            }
          },
          {
            "name": "Klarna Payload",
            "in": "body",
            "description": "The details of the order to be processed by payment type Klarna",
            "schema": {
              "type": "object",
              "properties": {
                "authToken": {
                  "type": "string",
                  "description": "The authToken is provided by the Klarna SDK authorize method",
                  "example": "8ea20527-7179-7fb6-a7e4-267ffa98ad86",
                  "required": true
                },
                "cardCvv": {
                  "type": "string",
                  "example": 0
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "cardNumber": {
                      "type": "string",
                      "example": "0"
                    },
                    "expiryMonth": {
                      "type": "string"
                    },
                    "expiryYear": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "KLRNA"
                    }
                  },
                  "authToken": {
                    "type": "string"
                  }
                },
                "deliveryInstructions": {
                  "type": "string",
                  "example": ""
                },
                "orderDeliveryOption": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "type": "string"
                    },
                    "shipCode": {
                      "type": "string"
                    },
                    "shipModeId": {
                      "type": "string"
                    },
                    "deliveryStoreCode": {
                      "type": "string"
                    },
                    "shippingCountry": {
                      "type": "string"
                    }
                  }
                },
                "paymentType": {
                  "type": "string",
                  "example": "KLRNA",
                  "required": true
                },
                "punchoutReturnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/psd2-order-punchout?orderId=8359831&paymentMethod=KLRNA"
                },
                "remoteIpAddress": {
                  "type": "string",
                  "example": "127.0.0.1"
                },
                "returnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/order-complete?orderId=8359831&paymentMethod=KLRNA"
                },
                "save_details": {
                  "type": "boolean",
                  "example": true
                },
                "smsMobileNumber": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          },
          {
            "name": "Paypal Payload",
            "in": "body",
            "description": "The details of the order to be processed by payment type Paypal",
            "schema": {
              "type": "object",
              "properties": {
                "cardCvv": {
                  "type": "string",
                  "example": 0
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "cardNumber": {
                      "type": "string",
                      "example": "0"
                    },
                    "expiryMonth": {
                      "type": "string"
                    },
                    "expiryYear": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "PYPAL"
                    }
                  }
                },
                "deliveryInstructions": {
                  "type": "string",
                  "example": ""
                },
                "orderDeliveryOption": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "type": "string"
                    },
                    "shipCode": {
                      "type": "string"
                    },
                    "shipModeId": {
                      "type": "string"
                    },
                    "deliveryStoreCode": {
                      "type": "string"
                    },
                    "shippingCountry": {
                      "type": "string"
                    }
                  }
                },
                "paymentType": {
                  "type": "string",
                  "example": "PYPAL",
                  "required": true
                },
                "punchoutReturnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/psd2-order-punchout?orderId=8359831&paymentMethod=PYPAL"
                },
                "remoteIpAddress": {
                  "type": "string",
                  "example": "127.0.0.1"
                },
                "returnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/order-complete?orderId=8359831&paymentMethod=PYPAL"
                },
                "save_details": {
                  "type": "boolean",
                  "example": true
                },
                "smsMobileNumber": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          },
          {
            "name": "Apple Pay Payload",
            "in": "body",
            "description": "The details of the order to be processed by payment type Apple Pay",
            "schema": {
              "type": "object",
              "properties": {
                "paymentToken": {
                  "type": "string",
                  "required": true,
                  "description": "This property is only for Apps"
                },
                "cardCvv": {
                  "type": "string",
                  "example": 0
                },
                "creditCard": {
                  "type": "object",
                  "properties": {
                    "cardNumber": {
                      "type": "string",
                      "example": "0"
                    },
                    "expiryMonth": {
                      "type": "string"
                    },
                    "expiryYear": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "example": "PYPAL"
                    }
                  }
                },
                "deliveryInstructions": {
                  "type": "string",
                  "example": ""
                },
                "orderDeliveryOption": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "type": "string"
                    },
                    "shipCode": {
                      "type": "string"
                    },
                    "shipModeId": {
                      "type": "string"
                    },
                    "deliveryStoreCode": {
                      "type": "string"
                    },
                    "shippingCountry": {
                      "type": "string"
                    }
                  }
                },
                "paymentType": {
                  "type": "string",
                  "example": "APPLE",
                  "required": true
                },
                "punchoutReturnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/psd2-order-punchout?orderId=8359831&paymentMethod=APPLE"
                },
                "remoteIpAddress": {
                  "type": "string",
                  "example": "127.0.0.1"
                },
                "returnUrl": {
                  "type": "string",
                  "description": "Should contain a paymentMethod query param",
                  "example": "http://www.topshop.com/order-complete?orderId=8359831&paymentMethod=APPLE"
                },
                "save_details": {
                  "type": "boolean",
                  "example": true
                },
                "smsMobileNumber": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        ],
        "summary": "Create an order",
        "description": "Creating an order for different \"paymentTypes\"",
        "responses": {
          "200": {
            "description": "In cases where no third party verification is required, the successful response will be a completed order object. If third party authentication is required, the response will contain a paymentRedirectUrl which the client will automatically use to redirect the user.",
            "schema": {
              "type": "object",
              "properties": {
                "completedOrder": {
                  "type": "object",
                  "properties": {
                    "billingAddress": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "123 Sesame Street"
                        },
                        "address2": {
                          "type": "string",
                          "example": ""
                        },
                        "address3": {
                          "type": "string",
                          "example": "London"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdeom"
                        },
                        "name": {
                          "type": "string",
                          "example": "Bob Barker"
                        }
                      }
                    },
                    "currencyConversion": {
                      "type": "object",
                      "properties": {
                        "currencyRate": {
                          "type": "string",
                          "example": "GBP"
                        }
                      }
                    },
                    "deliveryAddress": {
                      "type": "object",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "example": "1 Oxford Circus"
                        },
                        "address2": {
                          "type": "string",
                          "example": "West End"
                        },
                        "address3": {
                          "type": "string",
                          "example": "London"
                        },
                        "country": {
                          "type": "string",
                          "example": "United Kingdom"
                        },
                        "name": {
                          "type": "string",
                          "example": "Bob Barker"
                        }
                      }
                    },
                    "deliveryCarrier": {
                      "type": "string",
                      "example": ""
                    },
                    "deliveryCost": {
                      "type": "string",
                      "example": "4.00"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "12 January 2018"
                    },
                    "deliveryMethod": {
                      "type": "string",
                      "example": "Standard Delivery"
                    },
                    "deliveryPrice": {
                      "type": "string",
                      "example": "4.00"
                    },
                    "orderId": {
                      "type": "number",
                      "example": 700381254
                    },
                    "orderLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "colour": {
                            "type": "string",
                            "example": "BLUE"
                          },
                          "discount": {
                            "type": "string",
                            "example": "10.00"
                          },
                          "discountPrice": {
                            "type": "string",
                            "example": "30.00"
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://stage.topshop.com/image"
                          },
                          "lineNo": {
                            "type": "string",
                            "example": "1A1A1A"
                          },
                          "productId": {
                            "type": "string",
                            "example": "31313131"
                          },
                          "name": {
                            "type": "string",
                            "example": "Blue dress"
                          },
                          "nonRefundable": {
                            "type": "boolean",
                            "example": false
                          },
                          "quantity": {
                            "type": "quantity",
                            "example": 1
                          },
                          "size": {
                            "type": "string",
                            "example": "12"
                          },
                          "total": {
                            "type": "string",
                            "example": "30.00"
                          },
                          "unitPrice": {
                            "type": "string",
                            "example": "40.00"
                          }
                        }
                      }
                    },
                    "paymentDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cardNumberStar": {
                            "type": "string",
                            "example": "************1111"
                          },
                          "paymentMethod": {
                            "type": "string",
                            "example": "VISA"
                          },
                          "totalCost": {
                            "type": "string",
                            "example": "34.00"
                          }
                        }
                      }
                    },
                    "returnPossible": {
                      "type": "boolean",
                      "example": false
                    },
                    "returnRequested": {
                      "type": "boolean",
                      "example": false
                    },
                    "returning_buyer": {
                      "type": "boolean",
                      "example": true
                    },
                    "subTotal": {
                      "type": "string",
                      "example": "30.00"
                    },
                    "totalOrderPrice": {
                      "type": "string",
                      "example": "34.00"
                    },
                    "totalOrdersDiscount": {
                      "type": "string",
                      "example": "10.00"
                    },
                    "totalOrdersDiscountLabel": {
                      "type": "string",
                      "example": ""
                    },
                    "userType": {
                      "description": "G: Guest order; R: Returning customer placed an order; A: Customer placed an order but not registered on same day; S: Customer placed an order registering on same day;",
                      "type": "string",
                      "enum": [
                        "G",
                        "R",
                        "A",
                        "S"
                      ],
                      "example": "S"
                    },
                    "discounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "example": "Monty Test 7p off"
                          },
                          "value": {
                            "type": "string",
                            "example": "0.07"
                          }
                        }
                      }
                    },
                    "isRegisteredEmail": {
                      "type": "boolean",
                      "example": true
                    },
                    "guestUserEmail": {
                      "type": "string",
                      "example": "guestuseremail@mail.com"
                    }
                  }
                }
              },
              "paymentRedirectUrl": "http://foo.bar.com/authorisepayment&token=whatever"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put#/api/order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Depending on the payment type, this will contain a key, token, or other value that is passed to WCS to confirm the payment was authorised on the third party site. See https://arcadiagroup.atlassian.net/wiki/spaces/SE/pages/417366020/PUT+order+payloads for examples for each payment type.",
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Updates WCS with credentials from a third party payment site.",
        "responses": {
          "200": {
            "description": "Payment is approved and order is confirmed",
            "schema": {
              "schema": {
                "$ref": "#/definitions/orderCompleted"
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/psd2/order": {
      "put": {
        "operationId": "put#/api/psd2/order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Depending on the payment type, this will contain a key, token, or other value that is passed to WCS to confirm the payment was authorised on the third party site. See https://arcadiagroup.atlassian.net/wiki/spaces/SE/pages/417366020/PUT+order+payloads for examples for each payment type.",
            "schema": {
              "type": "object"
            }
          }
        ],
        "summary": "Updates WCS with credentials from a third party payment site.",
        "responses": {
          "200": {
            "description": "Payment is approved and order is confirmed",
            "schema": {
              "$ref": "#/definitions/orderCompleted"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/psd2/pre-payment-config": {
      "post": {
        "operationId": "post#/api/psd2/pre-payment-config",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Note: Could become mandatory with further phases of PSD2 implementation",
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "required": false,
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "langId",
            "type": "integer",
            "in": "query",
            "required": false
          },
          {
            "name": "storeId",
            "type": "integer",
            "in": "query",
            "required": true
          },
          {
            "name": "catalogId",
            "type": "integer",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Obtains the BIN, JWT, and URL needed for making a DDC form post at the start of the payment process.",
        "responses": {
          "200": {
            "description": "BIN, JWT, and URL needed for DDC form.",
            "schema": {
              "$ref": "#/definitions/prePaymentConfig"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/checkout/order_summary/{orderId?}": {
      "get": {
        "operationId": "get#/api/checkout/order_summary/{orderId?}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "type": "string",
            "name": "orderId?",
            "in": "path",
            "required": true,
            "description": "The current orderId. This can be passed to reduce the load on the backend to retrieve it from session"
          }
        ],
        "summary": "Get the summary of an order to be processed.",
        "responses": {
          "200": {
            "description": "Order Summary object",
            "schema": {
              "$ref": "#/definitions/orderSummary"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Items out of stock or are restricted from delivery",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "text",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "text",
                  "example": "There are items in your basket that are now out of stock, remove these to continue your order"
                },
                "data": {
                  "type": "object",
                  "description": "Used for failed requests to return data which may still be useable, such as the basket state",
                  "properties": {
                    "basket": {
                      "$ref": "#/definitions/basket"
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/checkout/order_summary": {
      "put": {
        "operationId": "put#/api/checkout/order_summary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "number",
                  "example": 2230213
                },
                "deliveryType": {
                  "type": "string",
                  "example": "STORE_STANADARD"
                },
                "deliveryStoreCode": {
                  "type": "string",
                  "example": "TS0001"
                },
                "shipModeId": {
                  "type": "number",
                  "example": 33097
                },
                "shippingCountry": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "storeAddress1": {
                  "type": "string",
                  "example": "214 Oxford Street"
                },
                "storeAddress2": {
                  "type": "string",
                  "example": "Oxford Circus"
                },
                "storeCity": {
                  "type": "string",
                  "example": "West End"
                },
                "storePostcode": {
                  "type": "string",
                  "example": "W1W 8LG"
                }
              }
            }
          }
        ],
        "summary": "Change the delivery type of an order from the order summary",
        "responses": {
          "200": {
            "description": "Order Summary object",
            "$ref": "#/definitions/orderSummary",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/checkout/order_summary/delivery_address": {
      "post": {
        "operationId": "post#/api/checkout/order_summary/delivery_address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Delivery details",
            "schema": {
              "type": "object",
              "properties": {
                "addressDetailsId": {
                  "type": "integer",
                  "example": 12345
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "example": "Greater London"
                    },
                    "address1": {
                      "type": "string",
                      "example": "1 Oxford Street"
                    },
                    "address2": {
                      "type": "string",
                      "example": "Westminster"
                    },
                    "postcode": {
                      "type": "string",
                      "example": "W1 1A1"
                    },
                    "city": {
                      "type": "string",
                      "example": "London"
                    },
                    "country": {
                      "type": "string",
                      "example": "United Kingdom"
                    }
                  }
                },
                "nameAndPhone": {
                  "type": "object",
                  "properties": {
                    "lastName": {
                      "type": "string",
                      "example": "Barker"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Bob"
                    },
                    "title": {
                      "type": "string",
                      "example": "Mr"
                    },
                    "telephone": {
                      "type": "string",
                      "example": "020111222"
                    }
                  }
                },
                "responseType": {
                  "type": "string",
                  "required": false,
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Add a delivery address to a user account",
        "responses": {
          "200": {
            "description": "All Saved Addresses",
            "schema": {
              "type": "object",
              "properties": {
                "savedAddresses": {
                  "$ref": "#/definitions/savedAddresses"
                },
                "deliveryDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "billingDetails": {
                  "$ref": "#/definitions/userDetails"
                },
                "creditCard": {
                  "$ref": "#/definitions/creditCard"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put#/api/checkout/order_summary/delivery_address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "Unique address identifier for selected address",
            "schema": {
              "type": "object",
              "properties": {
                "addressId": {
                  "type": "integer",
                  "example": 12345
                },
                "responseType": {
                  "type": "string",
                  "required": false,
                  "example": "orderSummary"
                }
              }
            }
          }
        ],
        "summary": "Select one of a registered user's saved addresses",
        "responses": {
          "200": {
            "description": "All Saved Addresses",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Address updated"
                },
                "savedAddresses": {
                  "$ref": "#/definitions/savedAddresses"
                },
                "deliveryDetails": {
                  "$ref": "#/definitions/userDetails"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete#/api/checkout/order_summary/delivery_address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": "true",
            "schema": {
              "type": "object",
              "properties": {
                "addressId": {
                  "type": "string",
                  "example": "550505"
                }
              }
            }
          }
        ],
        "summary": "Remove a saved address from a user account. This response is currently not transformed from WCS.",
        "responses": {
          "200": {
            "description": "WCS response object. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "example": "update"
                },
                "success": {
                  "type": "string",
                  "example": "true"
                },
                "message": {
                  "type": "string",
                  "example": "Address removed"
                },
                "DeliveryOptionsDetails": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "type": "number",
                      "example": 700335010
                    },
                    "deliveryoptionsform": {
                      "type": "object",
                      "properties": {
                        "selectedAddressID": {
                          "type": "string",
                          "example": "828936"
                        },
                        "deliveryDetails": {
                          "type": "object",
                          "properties": {
                            "addressDetailsId": {
                              "type": "string",
                              "example": "828936"
                            },
                            "nameAndPhone": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "example": "Mr"
                                },
                                "firstName": {
                                  "type": "string",
                                  "example": "GGGG"
                                },
                                "lastName": {
                                  "type": "string",
                                  "example": "PPPPPP"
                                },
                                "telephone": {
                                  "type": "string",
                                  "example": "07776260690"
                                }
                              }
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "address1": {
                                  "type": "string",
                                  "example": "123 Sesame STreet"
                                },
                                "city": {
                                  "type": "string",
                                  "example": "London"
                                },
                                "postcode": {
                                  "type": "string",
                                  "example": "NW3 1HS"
                                },
                                "country": {
                                  "type": "string",
                                  "example": "United Kingdom"
                                }
                              }
                            }
                          }
                        },
                        "estimatedDeliveryDate": {
                          "type": "string",
                          "example": "Friday 1 December 2017"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/checkout/gift-card": {
      "post": {
        "operationId": "post#/api/checkout/gift-card",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "16 digit card number and 4 digit pin",
            "schema": {
              "type": "object",
              "properties": {
                "giftCardnumber": {
                  "type": "string",
                  "example": "1234123412341234"
                },
                "pin": {
                  "type": "string",
                  "example": "5678"
                }
              }
            }
          }
        ],
        "summary": "Add a gift card to an order",
        "responses": {
          "200": {
            "description": "Order Summary including added gift card",
            "schema": {
              "type": "object",
              "properties": {
                "basket": {
                  "$ref": "#/definitions/basket"
                },
                "deliveryLocations": {
                  "$ref": "#/definitions/deliveryLocations"
                },
                "discounts": {
                  "$ref": "#/definitions/discounts"
                },
                "giftCards": {
                  "$ref": "#/definitions/giftCards"
                },
                "deliveryInstructions": {
                  "type": "string",
                  "example": "Leave on my front door please"
                },
                "smsMobileNumber": {
                  "type": "string",
                  "example": "1234123412"
                },
                "shippingCountry": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "savedAddresses": {
                  "$ref": "#/definitions/savedAddresses"
                },
                "ageVerificationDeliveryConfirmationRequired": {
                  "type": "boolean",
                  "example": false
                },
                "estimatedDelivery": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Thursday Oct 4th 2019"
                  }
                },
                "isGuestOrder": {
                  "type": "boolean"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Error with gift card number/pin, or there if there was insufficient credit on the gift card.",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "description": "Error status code",
                  "type": "number"
                },
                "error": {
                  "description": "Error type",
                  "type": "string"
                },
                "message": {
                  "description": "Error message that is displayed to the user",
                  "type": "string"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete#/api/checkout/gift-card",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "giftCardId",
            "in": "query",
            "description": "An internal gift card identifier that is returned from the server when the gift card is added",
            "required": true,
            "example": "123456"
          }
        ],
        "summary": "Remove a gift card from an order it was added to",
        "responses": {
          "200": {
            "description": "Order Summary including any other added gift cards",
            "properties": {
              "basket": {
                "$ref": "#/definitions/basket"
              },
              "deliveryLocations": {
                "$ref": "#/definitions/deliveryLocations"
              },
              "discounts": {
                "$ref": "#/definitions/discounts"
              },
              "giftCards": {
                "$ref": "#/definitions/giftCards"
              },
              "deliveryInstructions": {
                "type": "string",
                "example": "Leave on my front door please"
              },
              "smsMobileNumber": {
                "type": "string"
              },
              "shippingCountry": {
                "type": "string",
                "example": "United Kingdom"
              },
              "savedAddresses": {
                "$ref": "#/definitions/savedAddresses"
              },
              "ageVerificationDeliveryConfirmationRequired": {
                "type": "boolean"
              },
              "estimatedDelivery": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isGuestOrder": {
                "type": "boolean"
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Error if the gift card identifier is incorrect",
            "properties": {
              "statusCode": {
                "description": "Error status code",
                "type": "number"
              },
              "error": {
                "description": "Error type",
                "type": "string"
              },
              "message": {
                "description": "Error message that is displayed to the user",
                "type": "string"
              }
            },
            "example": {
              "statusCode": 422,
              "error": "Unprocessable Entity",
              "message": "The identifier was invalid"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/checkout/applepay_session": {
      "get": {
        "operationId": "get#/api/checkout/applepay_session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/store-locator": {
      "get": {
        "operationId": "get#/api/store-locator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/stores-countries": {
      "get": {
        "operationId": "get#/api/stores-countries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/email-me-in-stock": {
      "get": {
        "operationId": "get#/api/email-me-in-stock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "productId",
            "in": "query",
            "example": "21519255"
          },
          {
            "name": "firstName",
            "in": "query",
            "example": "Alex"
          },
          {
            "name": "surname",
            "in": "query",
            "example": "Trebek"
          },
          {
            "name": "email",
            "in": "query",
            "example": "foo@bar.com"
          },
          {
            "name": "size",
            "in": "query",
            "example": "W2434"
          },
          {
            "name": "sku",
            "in": "query",
            "example": "602015000888524"
          }
        ],
        "summary": "Instruct WCS to send an email to a user if a particular item is back in stock",
        "responses": {
          "200": {
            "description": "Success response. This is not transformed from WCS.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "action": {
                  "type": "string",
                  "example": "NotifyMe"
                },
                "message": {
                  "type": "string",
                  "example": "Your request has been received, and you will receive an email when the item is in stock."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/address": {
      "get": {
        "operationId": "get#/api/address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/address/{moniker}": {
      "get": {
        "operationId": "get#/api/address/{moniker}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/cms/seo": {
      "get": {
        "operationId": "get#/api/cms/seo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "type": "string",
            "name": "pathname",
            "in": "query",
            "required": true,
            "description": "The relative url of the cms content to be fetched"
          }
        ],
        "summary": "Get CMS JSON by relative url",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/cms/page/{pageName}": {
      "get": {
        "operationId": "get#/api/cms/page/{pageName}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "type": "string",
            "name": "pageName",
            "in": "path",
            "required": true,
            "description": "The page name of the CMS content to be fetched"
          }
        ],
        "summary": "Get CMS content by page name",
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/cms/forms/{formName}": {
      "get": {
        "operationId": "get#/api/cms/forms/{formName}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/montycms/form/submit": {
      "post": {
        "operationId": "post#/api/montycms/form/submit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/cms/form/submit": {
      "post": {
        "operationId": "post#/api/cms/form/submit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/client-{ltype}": {
      "post": {
        "operationId": "post#/api/client-{ltype}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/features/{consumer}": {
      "get": {
        "404": {
          "description": "Consumer not found",
          "schema": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean"
              },
              "message": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "get#/api/features/{consumer}",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "consumer",
            "in": "path",
            "description": "Either \"app\" or \"monty\"",
            "type": "string",
            "example": "app"
          }
        ],
        "summary": "Get the feature flags for a consumer",
        "responses": {
          "200": {
            "description": "The app consumer response",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "flags": {
                  "type": "object"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/features": {
      "get": {
        "operationId": "get#/api/features",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/klarna-session": {
      "post": {
        "operationId": "post#/api/klarna-session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "integer",
                  "example": 12345678
                }
              }
            }
          }
        ],
        "summary": "Create or update a Klarna session on WCS",
        "responses": {
          "200": {
            "description": "Response from creating or updating a session. When creating a session, only the sessionToken and clientId will be returned.",
            "schema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string",
                  "example": "2854fc6b-eda1-51a4-81d9-6108e77830d9"
                },
                "clientToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJub25lIn0.ewogICJzZXNzaW9uX2lkIiA6ICIyODU0ZmM2Yi1lZGExLTUxYTQtODFkOS02MTA4ZTc3ODMwZDkiLAogICJiYXNlX3VybCIgOiAiaHR0cHM6Ly9jcmVkaXQtZXUucGxheWdyb3VuZC5rbGFybmEuY29tIiwKICAiZGVzaWduIiA6ICJhcmNhZGlhLXRvcHNob3AiLAogICJsYW5ndWFnZSIgOiAiZW4iLAogICJwdXJjaGFzZV9jb3VudHJ5IiA6ICJHQiIsCiAgImFuYWx5dGljc19wcm9wZXJ0eV9pZCIgOiAiVUEtMzYwNTMxMzctMTEiLAogICJ0cmFjZV9mbG93IiA6IGZhbHNlLAogICJlbnZpcm9ubWVudCIgOiAicGxheWdyb3VuZCIsCiAgIm1lcmNoYW50X25hbWUiIDogIks1MDA0MDEiLAogICJzZXNzaW9uX3R5cGUiIDogIkNSRURJVCIsCiAgImNsaWVudF9ldmVudF9iYXNlX3VybCIgOiAiaHR0cHM6Ly9ldnQucGxheWdyb3VuZC5rbGFybmEuY29tIgp9."
                },
                "paymentMethodCategories": {
                  "type": "string",
                  "example": "pay_later,pay_over_time"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put#/api/klarna-session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "integer",
                  "example": 12345678
                }
              }
            }
          }
        ],
        "summary": "Create or update a Klarna session on WCS",
        "responses": {
          "200": {
            "description": "Response from creating or updating a session. When creating a session, only the sessionToken and clientId will be returned.",
            "schema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string",
                  "example": "2854fc6b-eda1-51a4-81d9-6108e77830d9"
                },
                "clientToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJub25lIn0.ewogICJzZXNzaW9uX2lkIiA6ICIyODU0ZmM2Yi1lZGExLTUxYTQtODFkOS02MTA4ZTc3ODMwZDkiLAogICJiYXNlX3VybCIgOiAiaHR0cHM6Ly9jcmVkaXQtZXUucGxheWdyb3VuZC5rbGFybmEuY29tIiwKICAiZGVzaWduIiA6ICJhcmNhZGlhLXRvcHNob3AiLAogICJsYW5ndWFnZSIgOiAiZW4iLAogICJwdXJjaGFzZV9jb3VudHJ5IiA6ICJHQiIsCiAgImFuYWx5dGljc19wcm9wZXJ0eV9pZCIgOiAiVUEtMzYwNTMxMzctMTEiLAogICJ0cmFjZV9mbG93IiA6IGZhbHNlLAogICJlbnZpcm9ubWVudCIgOiAicGxheWdyb3VuZCIsCiAgIm1lcmNoYW50X25hbWUiIDogIks1MDA0MDEiLAogICJzZXNzaW9uX3R5cGUiIDogIkNSRURJVCIsCiAgImNsaWVudF9ldmVudF9iYXNlX3VybCIgOiAiaHR0cHM6Ly9ldnQucGxheWdyb3VuZC5rbGFybmEuY29tIgp9."
                },
                "paymentMethodCategories": {
                  "type": "string",
                  "example": "pay_later,pay_over_time"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/saved_basket": {
      "post": {
        "operationId": "post#/api/saved_basket",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Saves the shopping bag to the saved basket",
        "responses": {
          "200": {
            "description": "Saved basket response from WCS. This is currently not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "hasWishList": {
                  "type": "boolean",
                  "example": true
                },
                "itemSaved": {
                  "type": "boolean",
                  "example": true
                },
                "savedProducts": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imageUrl": {
                            "type": "string",
                            "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62M65IPLM_small.jpg"
                          },
                          "colour": {
                            "type": "string",
                            "example": "PLUM"
                          },
                          "catEntryId": {
                            "type": "number",
                            "example": 21657409
                          },
                          "lineNumber": {
                            "type": "string",
                            "example": "62M65IPLM"
                          },
                          "name": {
                            "type": "string",
                            "example": "**High Neck Drape Dress by Wal G"
                          },
                          "shipModeId": {
                            "type": "number",
                            "example": 26504
                          },
                          "size": {
                            "type": "string",
                            "example": "S"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "instock": {
                            "type": "boolean",
                            "example": true
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 29
                          },
                          "Total": {
                            "type": "number",
                            "example": 29
                          }
                        }
                      }
                    }
                  }
                },
                "savedBag": {
                  "type": "boolean",
                  "example": true
                },
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your shopping bag has been saved for later"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get#/api/saved_basket",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Get all saved products",
        "responses": {
          "200": {
            "description": "Saved products",
            "schema": {
              "type": "object",
              "properties": {
                "savedProducts": {
                  "$ref": "#/definitions/savedBasketProduct"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete#/api/saved_basket",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Remove all saved items",
        "responses": {
          "200": {
            "description": "Success response from WCS. This is not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your Save for Later bag has been updated"
                },
                "total": {
                  "type": "string",
                  "example": "47.790000"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Failure",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "Could not delete saved items."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/saved_basket/item": {
      "post": {
        "operationId": "post#/api/saved_basket/item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "ProductId and CatEntryId, and quantity of the item to be saved. This item should be in the cart.",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "12345678"
                },
                "catEntryId": {
                  "type": "string",
                  "example": "98765432"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "summary": "Save an item from the basket",
        "responses": {
          "200": {
            "description": "Saved basket response from WCS. This is currently not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "hasWishList": {
                  "type": "boolean",
                  "example": true
                },
                "itemSaved": {
                  "type": "boolean",
                  "example": true
                },
                "savedProducts": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imageUrl": {
                            "type": "string",
                            "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62M65IPLM_small.jpg"
                          },
                          "colour": {
                            "type": "string",
                            "example": "PLUM"
                          },
                          "catEntryId": {
                            "type": "number",
                            "example": 21657409
                          },
                          "lineNumber": {
                            "type": "string",
                            "example": "62M65IPLM"
                          },
                          "name": {
                            "type": "string",
                            "example": "**High Neck Drape Dress by Wal G"
                          },
                          "shipModeId": {
                            "type": "number",
                            "example": 26504
                          },
                          "size": {
                            "type": "string",
                            "example": "S"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "instock": {
                            "type": "boolean",
                            "example": true
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 29
                          },
                          "Total": {
                            "type": "number",
                            "example": 29
                          }
                        }
                      }
                    }
                  }
                },
                "savedBag": {
                  "type": "boolean",
                  "example": true
                },
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your item has been saved for later"
                },
                "rows": {
                  "type": "number",
                  "example": 4
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete#/api/saved_basket/item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "ProductId and CatEntryId of the item to be removed from saved items.",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "12345678"
                },
                "catEntryId": {
                  "type": "string",
                  "example": "98765432"
                }
              }
            }
          }
        ],
        "summary": "Remove a single item from saved items",
        "responses": {
          "200": {
            "description": "Success response from WCS. This response is not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your Save for Later bag has been updated"
                },
                "total": {
                  "type": "string",
                  "example": "47.790000"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "422": {
            "description": "Failure",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 422
                },
                "error": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                },
                "message": {
                  "type": "string",
                  "example": "Could not delete saved item."
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/saved_basket/item/restore": {
      "put": {
        "operationId": "put#/api/saved_basket/item/restore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "catEntryId",
                "productId"
              ],
              "properties": {
                "catEntryId": {
                  "type": "string"
                },
                "productId": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "summary": "Restores an item from the saved basket to the shopping bag",
        "responses": {
          "200": {
            "description": "Basket response from WCS. This is currently not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "hasWishList": {
                  "type": "boolean",
                  "example": true
                },
                "itemSaved": {
                  "type": "boolean",
                  "example": true
                },
                "products": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "Item": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "selected": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "size": {
                                      "type": "string",
                                      "example": "XS"
                                    },
                                    "quantity": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "sku": {
                                      "type": "string",
                                      "example": "602015000890858"
                                    },
                                    "catEntryId": {
                                      "type": "number",
                                      "example": 21919940
                                    },
                                    "unitPrice": {
                                      "type": "number",
                                      "example": 36
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "imageUrl": {
                            "type": "string",
                            "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62M65IPLM_small.jpg"
                          },
                          "colour": {
                            "type": "string",
                            "example": "PLUM"
                          },
                          "catEntryId": {
                            "type": "number",
                            "example": 21657409
                          },
                          "lineNumber": {
                            "type": "string",
                            "example": "62M65IPLM"
                          },
                          "name": {
                            "type": "string",
                            "example": "**High Neck Drape Dress by Wal G"
                          },
                          "shipModeId": {
                            "type": "number",
                            "example": 26504
                          },
                          "size": {
                            "type": "string",
                            "example": "S"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "instock": {
                            "type": "boolean",
                            "example": true
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 29
                          },
                          "Total": {
                            "type": "number",
                            "example": 29
                          }
                        }
                      }
                    }
                  }
                },
                "savedProducts": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imageUrl": {
                            "type": "string",
                            "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62M65IPLM_small.jpg"
                          },
                          "colour": {
                            "type": "string",
                            "example": "PLUM"
                          },
                          "catEntryId": {
                            "type": "number",
                            "example": 21657409
                          },
                          "lineNumber": {
                            "type": "string",
                            "example": "62M65IPLM"
                          },
                          "name": {
                            "type": "string",
                            "example": "**High Neck Drape Dress by Wal G"
                          },
                          "shipModeId": {
                            "type": "number",
                            "example": 26504
                          },
                          "size": {
                            "type": "string",
                            "example": "S"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "instock": {
                            "type": "boolean",
                            "example": true
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 29
                          },
                          "Total": {
                            "type": "number",
                            "example": 29
                          }
                        }
                      }
                    }
                  }
                },
                "savedBag": {
                  "type": "boolean",
                  "example": true
                },
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your shopping bag has been updated"
                },
                "rows": {
                  "type": "number",
                  "example": 4
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/saved_basket/item/fetch_item_sizes_and_quantities": {
      "get": {
        "operationId": "get#/api/saved_basket/item/fetch_item_sizes_and_quantities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "catEntryId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The catEntryId of the product to be queried"
          }
        ],
        "summary": "Get available sizes and quantities for a particular item.",
        "responses": {
          "200": {
            "description": "List of other variants of the same item",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "string",
                    "example": "37"
                  },
                  "quantity": {
                    "type": "number",
                    "example": 20
                  },
                  "catEntryId": {
                    "type": "number",
                    "example": 12345678
                  },
                  "selected": {
                    "type": "boolean",
                    "example": true
                  },
                  "wasPrice": {
                    "type": "string",
                    "example": "50.00"
                  },
                  "wasWasPrice": {
                    "type": "string",
                    "example": "100.00"
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/saved_basket/item/update_item": {
      "put": {
        "operationId": "put#/api/saved_basket/item/update_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "description": "The productId of the item, catEntryId of the previous size and the size that is to be selected, and the new quantity. If only the quantity is to be changed, the two catEntryId values should be the same.",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "12345678"
                },
                "catEntryIdToAdd": {
                  "type": "string",
                  "example": "98765432"
                },
                "catEntryIdToDelete": {
                  "type": "string",
                  "example": "34534534"
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "summary": "Update the size and/or quantity of a saved item.",
        "responses": {
          "200": {
            "description": "Saved basket response from WCS. This is currently not transformed. Irrelevant properties omitted.",
            "schema": {
              "type": "object",
              "properties": {
                "hasWishList": {
                  "type": "boolean",
                  "example": true
                },
                "itemSaved": {
                  "type": "boolean",
                  "example": true
                },
                "savedProducts": {
                  "type": "object",
                  "properties": {
                    "Product": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imageUrl": {
                            "type": "string",
                            "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62M65IPLM_small.jpg"
                          },
                          "colour": {
                            "type": "string",
                            "example": "PLUM"
                          },
                          "catEntryId": {
                            "type": "number",
                            "example": 21657409
                          },
                          "lineNumber": {
                            "type": "string",
                            "example": "62M65IPLM"
                          },
                          "name": {
                            "type": "string",
                            "example": "**High Neck Drape Dress by Wal G"
                          },
                          "shipModeId": {
                            "type": "number",
                            "example": 26504
                          },
                          "size": {
                            "type": "string",
                            "example": "S"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 1
                          },
                          "instock": {
                            "type": "boolean",
                            "example": true
                          },
                          "unitPrice": {
                            "type": "number",
                            "example": 29
                          },
                          "Total": {
                            "type": "number",
                            "example": 29
                          }
                        }
                      }
                    }
                  }
                },
                "savedBag": {
                  "type": "boolean",
                  "example": true
                },
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Your shopping bag has been updated"
                },
                "rows": {
                  "type": "number",
                  "example": 4
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist/create": {
      "post": {
        "operationId": "post#/api/wishlist/create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "wishlistName"
              ],
              "properties": {
                "wishlistName": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "summary": "Creates a wishlist for the signed in user",
        "description": "At the moment we only support creating a single default wishlist. This should be done after the registering the user.",
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "externalId": {
                  "type": "integer"
                },
                "giftListName": {
                  "type": "string"
                },
                "giftListId": {
                  "type": "integer"
                },
                "storeId": {
                  "type": "integer"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist/add_item": {
      "post": {
        "operationId": "post#/api/wishlist/add_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The productId from PDP or PLP responses is acceptable.",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "productId"
              ],
              "properties": {
                "productId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "summary": "Add a product to a wishlist",
        "description": "A product is the level above the SKU. For example the product is \"Mario's Black Shirt \" and the SKU is \"Mario's Black Shirt size 4\".",
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "pageNo": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "productList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer"
                      },
                      "giftListItemId": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "productId",
                      "giftListItemId"
                    ]
                  }
                },
                "noOfItemsInList": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer"
                },
                "giftListId": {
                  "type": "integer"
                },
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "pageNo",
                "name",
                "productList",
                "noOfItemsInList",
                "type",
                "pageSize",
                "giftListId",
                "success",
                "message"
              ]
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist/item_ids": {
      "get": {
        "operationId": "get#/api/wishlist/item_ids",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "query",
            "name": "wishlistId",
            "type": "string",
            "required": true
          }
        ],
        "summary": "Gets a list of product ids from a wishlist",
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "integer"
                },
                "pageNo": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "giftListId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "noOfItemsInList": {
                  "type": "integer"
                },
                "productList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": {
                        "type": "integer"
                      },
                      "giftListItemId": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "productId",
                      "giftListItemId"
                    ]
                  }
                }
              },
              "required": [
                "pageSize",
                "pageNo",
                "name",
                "giftListId",
                "type",
                "noOfItemsInList",
                "productList"
              ]
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist": {
      "get": {
        "operationId": "get#/api/wishlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "query",
            "name": "wishlistId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageNo",
            "default": 1,
            "type": "integer",
            "description": "The page number starting from 1"
          },
          {
            "in": "query",
            "name": "maxItemsPerPage",
            "type": "integer",
            "default": 100
          }
        ],
        "summary": "Gets the products in a wishlist",
        "responses": {
          "200": {
            "summary": "Success response",
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "integer"
                },
                "pageNo": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "giftListId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "itemDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "parentProductId": {
                        "type": "string"
                      },
                      "sizeAndQuantity": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "size": {
                              "type": "string"
                            },
                            "catentryId": {
                              "type": "integer"
                            },
                            "quantity": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "size",
                            "catentryId",
                            "quantity"
                          ]
                        }
                      },
                      "size": {
                        "type": "string"
                      },
                      "avlQuantity": {
                        "type": "integer"
                      },
                      "productImageUrl": {
                        "type": "string"
                      },
                      "outfitBaseImageUrl": {
                        "type": "string"
                      },
                      "lineNumber": {
                        "type": "string"
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "was2Price": {
                            "type": "null"
                          },
                          "was1Price": {
                            "type": "string"
                          },
                          "nowPrice": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "was2Price",
                          "was1Price",
                          "nowPrice"
                        ]
                      },
                      "quantity": {
                        "type": "string"
                      },
                      "listItemId": {
                        "type": "string"
                      },
                      "productImage": {
                        "type": "string"
                      },
                      "colour": {
                        "type": "string"
                      },
                      "colourKey": {
                        "type": "string"
                      },
                      "productBaseImageUrl": {
                        "type": "string"
                      },
                      "catEntryId": {
                        "type": "string"
                      },
                      "outfitImageUrl": {
                        "type": "string"
                      },
                      "outfitImage": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "rating": {
                        "type": "null"
                      },
                      "sizeKey": {
                        "type": "string"
                      },
                      "assets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "assetType": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "assetType",
                            "url"
                          ]
                        },
                        "required": [
                          "parentProductId",
                          "sizeAndQuantity",
                          "size",
                          "avlQuantity",
                          "productImageUrl",
                          "outfitBaseImageUrl",
                          "price",
                          "quantity",
                          "listItemId",
                          "productImage",
                          "colour",
                          "colourKey",
                          "productBaseImageUrl",
                          "catEntryId",
                          "outfitImageUrl",
                          "outfitImage",
                          "title",
                          "rating",
                          "sizeKey",
                          "assets"
                        ]
                      }
                    },
                    "noOfItemsInList": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pageSize",
                    "pageNo",
                    "name",
                    "giftListId",
                    "type",
                    "itemDetails",
                    "noOfItemsInList"
                  ]
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist/remove_item": {
      "delete": {
        "operationId": "delete#/api/wishlist/remove_item",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "wishlistId",
                "wishlistItemId"
              ],
              "properties": {
                "wishlistId": {
                  "type": "string"
                },
                "wishlistItemId": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "summary": "Removes an item from a wishlist",
        "responses": {
          "200": {
            "summary": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "externalId": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "giftListId": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "giftListItemId": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storeId": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "success",
                "externalId",
                "giftListId",
                "giftListItemId",
                "storeId"
              ]
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlists": {
      "get": {
        "operationId": "get#/api/wishlists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "summary": "Returns the signed in user's wishlists",
        "responses": {
          "200": {
            "summary": "Success response",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "string"
                  },
                  "giftListId": {
                    "type": "string"
                  },
                  "giftListname": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "default",
                  "giftListId",
                  "giftListname",
                  "type"
                ]
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/wishlist/add_to_bag": {
      "post": {
        "operationId": "post#/api/wishlist/add_to_bag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "catEntryId": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              },
              "required": [
                "catEntryId",
                "quantity"
              ]
            }
          }
        ],
        "summary": "Add to bag from wishlist",
        "responses": {
          "200": {
            "description": "Shopping Basket Object",
            "schema": {
              "$ref": "#/definitions/basket"
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/espots": {
      "get": {
        "operationId": "get#/api/espots",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          },
          {
            "in": "query",
            "name": "items",
            "description": "Comma separated list of espots",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Returns data for a list of requested espots",
        "responses": {
          "200": {
            "description": "Successfully fetched the data for the espots listed",
            "schema": {
              "type": "object",
              "properties": {
                "espots": {
                  "type": "object",
                  "description": "Object with a property named after each requested espot which contains the data for that espot",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "EspotContents": {
                        "type": "object",
                        "properties": {
                          "cmsModileContent": {
                            "type": "object",
                            "properties": {
                              "pageId": {
                                "type": "number",
                                "example": 90624
                              },
                              "pageName": {
                                "type": "string",
                                "example": "static-0000090624"
                              },
                              "breadcrumb": {
                                "type": "string",
                                "example": "New UK Tactical Message"
                              },
                              "baseline": {
                                "type": "string",
                                "example": "200"
                              },
                              "revision": {
                                "type": "string",
                                "example": "0"
                              },
                              "lastPublished": {
                                "type": "string",
                                "example": "2018-05-24 17:09:20.577068"
                              },
                              "contentPath": {
                                "type": "string",
                                "example": "cms/pages/static/static-0000090624/static-0000090624.html"
                              },
                              "seoUrl": {
                                "type": "string",
                                "example": "/en/tsuk/category/new-uk-tactical-message-4674354/home"
                              },
                              "mobileCMSUrl": {
                                "type": "string",
                                "example": "cms/pages/json/json-0000116708/json-0000116708.json"
                              },
                              "responsiveCMSUrl": {
                                "type": "string",
                                "example": "cms/pages/json/json-0000116708/json-0000116708.json"
                              }
                            }
                          },
                          "encodedcmsMobileContent": {
                            "type": "string",
                            "example": "%3C%21--+CMS+Page+Version%3A+static-0000090624+baseline%3A+200+revision%3A+0+published%3A+2018-05-24+17%3A09%3A20.577068%3AJake+Stewart+--%3E+%3C%21--+CMS+Page+Data+Start+--%3E+%3Cscript+type%3D%22text%2Fjavascript%22%3E+%2F%2F%3C%21%5BCDATA%5B+var+cmsPage90624+%3D+%7B+%22pageId%22%3A+90624%2C+%22pageName%22%3A+%22static-0000090624%22%2C+%22breadcrumb%22%3A+%22New+UK+Tactical+Message%22%2C+%22baseline%22%3A+%22200%22%2C+%22revision%22%3A+%220%22%2C+%22lastPublished%22%3A+%222018-05-24+17%3A09%3A20.577068%22%2C+%22contentPath%22%3A+%22cms%2Fpages%2Fstatic%2Fstatic-0000090624%2Fstatic-0000090624.html%22%2C+%22seoUrl%22%3A+%22%2Fen%2Ftsuk%2Fcategory%2Fnew-uk-tactical-message-4674354%2Fhome%22%2C+%22mobileCMSUrl%22%3A+%22cms%2Fpages%2Fjson%2Fjson-0000116708%2Fjson-0000116708.json%22%2C+%22responsiveCMSUrl%22%3A+%22%22+%7D+%2F%2F%5D%5D%3E+%3C%2Fscript%3E+%3C%21--+CMS+Page+Data+End+--%3E+%3C%21--+CMS+Temp+Version%3A+template-0000011130+baseline%3A+2+revision%3A+0+description%3A+Cycle+Builder+%28MASTER%29+%28REF+0000011124%29+published%3A+2013-10-09+12%3A38%3A33.676962+--%3E+%3Clink+rel%3D%22stylesheet%22+type%3D%22text%2Fcss%22+href%3D%22https%3A%2F%2Fts-tst1.tst.digital.arcadiagroup.co.uk%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fcms%2Ftemplates%2Fstatic%2Ftemplate-0000011130%2Fcss%2Fdefault.css%22+%2F%3E%3Cstyle+type%3D%22text%2Fcss%22%3E+%2F*%3C%21%5BCDATA%5B*%2F+%2F*%5D%5D%3E*%2F+%3C%2Fstyle%3E+%3Cstyle+type%3D%22text%2Fcss%22%3E+%2F*%3C%21%5BCDATA%5B*%2F+%2F*%5D%5D%3E*%2F+%3C%2Fstyle%3E+%3Cdiv+id%3D%22cycleBuilder90624%22+class%3D%22cycleBuilderContent+default%22%3E+%3Cul+class%3D%27cycleItemList%27%3E+%3Cli+class%3D%27cycleItem_1%27%3E%3Ca+href%3D%22%2Fen%2Ftsuk%2Fcategory%2Fuk-delivery-4043283%2Fhome%3FTS%3D1421171569402%26amp%3Bcat2%3D2141530%26amp%3Bintcmpid%3DTACTICAL_SHIPPING%22+title%3D%22FREE+DELIVERY*+FIND+OUT+MORE+%22+target%3D%22_self%22%3EFREE+DELIVERY*+FIND+OUT+MORE%3C%2Fa%3E%3C%2Fli%3E+%3Cli+class%3D%27cycleItem_2%27%3E%3Ca+href%3D%22%2Fen%2Ftsuk%2Fcategory%2Ftopshop-students-student-discount-2316596%2Fhome%3FTS%3D1392132268317%26amp%3Bcat2%3D277560%26amp%3Bintcmpid%3DTACTICAL_STUDENT%22+title%3D%2210%25+STUDENT+DISCOUNT%21%22+target%3D%22_self%22%3E10%25+STUDENT+DISCOUNT%21%3C%2Fa%3E%3C%2Fli%3E+%3C%2Ful%3E+%3C%2Fdiv%3E%3Cscript+type%3D%27text%2Fjavascript%27+src%3D%27%2F%2Fwww.topshop.com%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fjs%2Fjquery.min.1.8.3.js%27%3E+%2F%2F%3C%21%5BCDATA%5B+%2F%2F%5D%5D%3E+%3C%2Fscript%3E+%3Cscript+type%3D%27text%2Fjavascript%27+src%3D%27%2F%2Fwww.topshop.com%2Fjavascript%2F3.15.0.0%2Flib%2Fplugins%2Fjquery.cycle.core.js%27%3E+%2F%2F%3C%21%5BCDATA%5B+%2F%2F%5D%5D%3E+%3C%2Fscript%3E+%3Cscript+type%3D%27text%2Fjavascript%27%3E+%2F%2F%3C%21%5BCDATA%5B+var+%24jQuery191+%3D+jQuery.noConflict%28%29%3B+%28function%28%24%29%7B+var+cycleItemNames+%3D+%5B%27FREE+DELIVERY*+FIND+OUT+MORE+%27%2C%2710%25+STUDENT+DISCOUNT%21%27%5D%3B+var+initialSlide+%3D+0%3B+var+locationHashVal+%3D+getHashVal%28document.location.hash%29%3B+var+sliderPos+%3D+1%3B+var+cycleWrapper+%3D+%24%28%27%23cycleBuilder90624%27%29%3B+if+%28locationHashVal+%21%3D+-1%29%7B+initialSlide+%3D+locationHashVal%3B+%7D+function+getHashVal%28hash%29%7B+if+%28hash.toLowerCase%28%29.match%28%27%23slide%27%29%29+%7B+hash+%3D+hash.replace%28%2F%23slide%2Fg%2C+%27%27%29%3B+hash+%3D+parseInt%28hash%29+-+1%3B+%7D+else+%7B+hash+%3D+-1%3B+%7D+return+hash%3B+%7D+cycleWrapper+.find%28%27.cycleItemList%27%29+.cycle%28%29%3B+cycleWrapper+.find%28%27area%5Bhref*%3D%5C%27%23slide%5C%27%5D%2C+a%5Bhref*%3D%5C%27%23slide%5C%27%5D%27%29+.bind%28%27click%27%2Cfunction%28%29+%7B+var+href+%3D+%24%28this%29.attr%28%27href%27%29%3B+locationHashVal+%3D+href.substr%28href.indexOf%28%27%23%27%29%2C+href.length%29%3B+locationHashVal+%3D+getHashVal%28locationHashVal%29%3B+if+%28locationHashVal+%21%3D+-1%29%7B+%24%28%27%23cycleBuilder90624+.cycleItemList%27%29.cycle%28locationHashVal%29%3B+%7D+%7D%29%3B+%7D%29%28%24jQuery191%29%3B+%2F%2F%5D%5D%3E+%3C%2Fscript%3E+%3C%21--Using+Master+Template%3A+%2Fstatic%2Ftemplate-0000011124+--%3E+"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          },
          "400": {
            "description": "Invalid \"items\" query parameter",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "number",
                  "example": 400
                },
                "error": {
                  "type": "text",
                  "example": "Bad request"
                },
                "message": {
                  "type": "text",
                  "example": "No Espot names provided"
                }
              }
            },
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/footers": {
      "get": {
        "operationId": "get#/api/footers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    },
    "/api/exponea": {
      "post": {
        "operationId": "post#/api/exponea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BRAND-CODE",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "tsuk",
              "tsus",
              "tsde",
              "tsfr",
              "tseu",
              "tmuk",
              "tmus",
              "tmde",
              "tmfr",
              "tmeu",
              "wluk",
              "wleu",
              "bruk",
              "breu",
              "dpuk",
              "dpeu",
              "dpus",
              "dpde",
              "evuk",
              "eveu",
              "msuk",
              "mseu",
              "msus"
            ]
          },
          {
            "name": "Cookie",
            "in": "header",
            "type": "string",
            "description": "For native apps should be: deviceType=apps",
            "pattern": "deviceType=(mobile|tablet|laptop|desktop|apps)"
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "headers": {
              "set-cookie": {
                "type": "string",
                "description": "1. source=<source> - Denotes the upstream service used, 2. `jessionid` cookie for tracking the user's session",
                "enum": [
                  "source=CoreAPI; Path=/",
                  "source=ScrAPI; Path=/"
                ]
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "24HrTimeString": {
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3])[0-5][0-9]$",
      "title": "24 hour time string",
      "description": "24 hour time, hours and minutes"
    },
    "ISODate": {
      "type": "string",
      "pattern": "^\\d\\d\\d\\d-\\d\\d-\\d\\d$",
      "title": "ISO Date",
      "description": "Date in the format YYYY-MM-DD"
    },
    "basket": {
      "type": "object",
      "properties": {
        "ageVerificationRequired": {
          "type": "boolean"
        },
        "isBasketResponse": {
          "type": "boolean"
        },
        "isGiftCardRedemptionEnabled": {
          "type": "boolean"
        },
        "isGiftCardValueThresholdMet": {
          "type": "boolean"
        },
        "giftCardRedemptionPercentage": {
          "type": "number"
        },
        "isOrderCoveredByGiftCards": {
          "type": "boolean"
        },
        "deliveryOptions": {
          "type": "array",
          "description": "List of available delivery options for the basket",
          "items": {
            "type": "object",
            "properties": {
              "deliveryOptionId": {
                "type": "number",
                "description": "Internal code representing the delivery option",
                "example": 28004
              },
              "label": {
                "type": "string",
                "description": "UI label for the delivery option",
                "example": "Express / Nominated Delivery £6.00"
              },
              "plainLabel": {
                "type": "string",
                "description": "UI label for the delivery option",
                "example": "Express / Nominated Delivery"
              },
              "selected": {
                "type": "boolean",
                "description": "Whether the option is currently selected or not",
                "example": false
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the delivery method is currently enabled or not",
                "example": true
              },
              "type": {
                "type": "string",
                "description": "one of delivery methods/types",
                "example": "store_express"
              },
              "shippingCost": {
                "type": "number",
                "description": "Cost of delivery",
                "example": 6
              }
            }
          }
        },
        "discounts": {
          "type": "array",
          "description": "Array of discounts applied to the order (including gift cards)",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "UI label for the discount",
                "example": "Gift Card - XXXX XXXX XXXX 6765"
              },
              "value": {
                "type": "string",
                "description": "The value of the discount",
                "example": "5.00"
              }
            }
          }
        },
        "inventoryPositions": {
          "description": "List of items with details for FFS fulfillment. This will contain as many properties as there are items in the bag, but due to Swagger limitations only one is shown.",
          "$ref": "#/definitions/inventoryPositions"
        },
        "orderId": {
          "type": "number",
          "description": "Identification number for the order",
          "example": 12345678
        },
        "products": {
          "type": "array",
          "description": "Array of items in the basket.",
          "items": {
            "type": "object",
            "properties": {
              "ageVerificationRequired": {
                "type": "boolean",
                "description": "Shows if the item requires the customer to verify if they are an adult.",
                "example": false
              },
              "assets": {
                "type": "array",
                "description": "Array of image assets for the product",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetType": {
                      "type": "string",
                      "description": "The size of the image",
                      "example": "THUMBNAIL"
                    },
                    "index": {
                      "type": "number",
                      "example": 1
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the image asset",
                      "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/63I31IROS_zoom.jpg"
                    }
                  }
                }
              },
              "attributes": {
                "type": "object",
                "description": "The attributes of the product, if any",
                "properties": {}
              },
              "bundleProducts": {
                "type": "array",
                "description": "Other products included in the bundle, if any",
                "items": {}
              },
              "bundleSlots": {
                "type": "array",
                "items": {}
              },
              "catEntryId": {
                "type": "number",
                "description": "The category entry ID number of the product",
                "example": 12341234
              },
              "colourSwatches": {
                "type": "array",
                "description": "Swatch colours for this product, if any",
                "items": {}
              },
              "inStock": {
                "type": "boolean",
                "description": "Flag showing if the product is in stock",
                "example": true
              },
              "isBundleOrOutfit": {
                "type": "boolean",
                "description": "Flag showing if the product is part of a bundle",
                "example": false
              },
              "items": {
                "type": "array",
                "items": "false"
              },
              "lineNumber": {
                "type": "string",
                "description": "Unique code determining what line the product is in the basket",
                "example": "63I31IROS"
              },
              "lowStock": {
                "type": "boolean",
                "description": "Flag showing if stock for the product is low",
                "example": false
              },
              "name": {
                "type": "string",
                "description": "The product's name as shown to consumers",
                "example": "**Olivia Burton Painterly Prints  OB15PP07 watch"
              },
              "orderItemId": {
                "type": "string",
                "description": "Unique number relating the item to the order it is placed in. Differs for each item",
                "example": "7470367"
              },
              "productId": {
                "type": "string",
                "description": "Code for the product encompassing all sizes, swatches etc.",
                "example": "21926974"
              },
              "quantity": {
                "type": "number",
                "description": "Amount of the product added to the basket",
                "example": 2
              },
              "shipModeId": {
                "type": "string",
                "example": "26504"
              },
              "size": {
                "type": "string",
                "description": "Size of the item",
                "example": "ONE"
              },
              "totalPrice": {
                "type": "string",
                "description": "The price for the entire quantity of the item, after discounts or promotions applied",
                "example": "85.00"
              },
              "tpmLinks": {
                "type": "array",
                "items": {}
              },
              "unitPrice": {
                "type": "string",
                "description": "The price for one of the item, including any discounts but not factoring in promotions applied",
                "example": "170.00"
              },
              "promotionId": {
                "type": "string",
                "description": "If the product is included in a promotion, the ID of that specific promotion",
                "example": "11166542"
              },
              "promotionLabel": {
                "type": "string",
                "description": "Text describing the specific promotion the product is included in",
                "example": "3 for £8 Ankle Socks Promotion"
              },
              "promotionText": {
                "type": "string",
                "description": "Text that is displayed if the item is on a promotion",
                "example": "This is part of a promotion!"
              }
            }
          }
        },
        "promotions": {
          "type": "array",
          "items": {}
        },
        "PromotionDisplayURL": {
          "type": "string",
          "example": "http://foo.bar?promoId=123456&foo=bar"
        },
        "promoTitle": {
          "type": "string",
          "example": "3 for £8 ankle socks"
        },
        "unfulfilledPromotionLabel": {
          "type": "string",
          "example": "Hurry! Act now!"
        },
        "restrictedDeliveryItem": {
          "type": "boolean",
          "example": false
        },
        "savedProducts": {
          "type": "array",
          "example": {}
        },
        "subTotal": {
          "type": "string",
          "example": "168.00"
        },
        "totalBeforeDiscount": {
          "type": "string",
          "example": "170.00"
        },
        "total": {
          "type": "string",
          "example": "170.00"
        },
        "version": {
          "type": "string",
          "example": "1.7"
        }
      }
    },
    "creditCard": {
      "type": "object",
      "properties": {
        "cardNumberStar": {
          "type": "string",
          "example": "************1111"
        },
        "type": {
          "type": "string",
          "example": "VISA"
        }
      }
    },
    "deliveryLocations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "deliveryLocationType": {
            "type": "string",
            "description": "String representing the location of the delivery",
            "example": "STORE"
          },
          "deliveryMethods": {
            "type": "array",
            "description": "Array of methods available for that delivery location (express, standard, etc.)",
            "items": {
              "type": "object",
              "properties": {
                "additionalDescription": {
                  "type": "string",
                  "description": "Extra information shown in the UI about the delivery",
                  "example": "2-4 business days"
                },
                "deliveryOptions": {
                  "type": "array",
                  "description": "Array of available options for that delivery method (e.g. different possible days for express delivery)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateText": {
                        "type": "string",
                        "example": "26 Oct"
                      },
                      "dayText": {
                        "type": "string",
                        "example": "Thu"
                      },
                      "nominatedDate": {
                        "type": "string",
                        "example": "2017-10-26"
                      },
                      "price": {
                        "type": "string",
                        "example": "6.00"
                      },
                      "selected": {
                        "type": "boolean",
                        "example": false
                      },
                      "shipModeId": {
                        "type": "number",
                        "example": 28005
                      }
                    }
                  }
                },
                "deliveryType": {
                  "type": "string",
                  "description": "String summarizing the type of delivery",
                  "example": "HOME_EXPRESS"
                },
                "label": {
                  "type": "string",
                  "description": "UI label for that delivery type",
                  "example": "Express / Nominated day delivery"
                },
                "selected": {
                  "type": "boolean",
                  "description": "Flag showing if the delivery method is currently selected"
                },
                "shipCode": {
                  "type": "string",
                  "description": "Internal code specific to that delivery method",
                  "example": "S"
                },
                "shipModeId": {
                  "type": "number",
                  "description": "Internal code specific to that delivery method, delivery type, and delivery location",
                  "example": 26504
                }
              }
            }
          },
          "label": {
            "type": "string",
            "description": "UI label for the delivery location",
            "example": "Home Delivery Standard (UK up to 4 days; worldwide varies)  Express (UK next or nominated day; worldwide varies)"
          },
          "selected": {
            "type": "boolean",
            "description": "Flag representing if that delivery location is selected",
            "example": true
          }
        }
      }
    },
    "discounts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Promotion - £5 off"
          },
          "value": {
            "type": "string",
            "example": "5.00"
          }
        }
      }
    },
    "giftCards": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "amountUsed": {
            "type": "string",
            "example": "5.00"
          },
          "balance": {
            "type": "string",
            "example": "5.00"
          },
          "giftCardId": {
            "type": "string",
            "example": "123456"
          },
          "giftCardNumber": {
            "type": "string",
            "example": "1234123412341234"
          },
          "remainingBalance": {
            "type": "string",
            "example": "0.00"
          }
        }
      }
    },
    "savedAddresses": {
      "type": "object",
      "properties": {
        "savedAddresses": {
          "items": {
            "properties": {
              "addressName": {
                "type": "string",
                "example": "LONDON, E12 6RF, United Kingdom"
              },
              "id": {
                "type": "integer",
                "example": 123456
              },
              "selected": {
                "type": "boolean",
                "example": false
              },
              "lastName": {
                "type": "string",
                "example": "Bar"
              },
              "telephone": {
                "type": "string",
                "example": "1231231231"
              },
              "title": {
                "type": "string",
                "example": "Mr"
              },
              "firstName": {
                "type": "string",
                "example": "Foo"
              },
              "address1": {
                "type": "string",
                "example": "3 Essex Road"
              },
              "address2": {
                "type": "string",
                "example": ""
              },
              "city": {
                "type": "string",
                "example": "LONDON"
              },
              "state": {
                "type": "string",
                "example": ""
              },
              "country": {
                "type": "string",
                "example": "United Kingdom"
              },
              "postcode": {
                "type": "string",
                "example": "E12 6RF"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      }
    },
    "plpProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 21953026
        },
        "lineNumber": {
          "type": "string",
          "example": "TS32F04ITAN"
        },
        "name": {
          "type": "string",
          "example": "FAIRFAX Gladiator Fringe Sandals"
        },
        "unitPrice": {
          "type": "string",
          "example": "40.00"
        },
        "seoUrl": {
          "type": "string",
          "example": "http://ts.pplive.arcadiagroup.ltd.uk/en/tsuk/product/fairfax-gladiator-fringe-sandals-4899494"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productAssets"
          }
        },
        "additionalAssets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "assetType": {
                "type": "string",
                "enum": [
                  "IMAGE_ZOOM",
                  "IMAGE_2COL",
                  "IMAGE_3COL",
                  "IMAGE_4COL",
                  "IMAGE_OUTFIT_SMALL",
                  "IMAGE_OUTFIT_THUMB",
                  "IMAGE_OUTFIT_LARGE",
                  "IMAGE_OUTFIT_NORMAL",
                  "IMAGE_OUTFIT_ZOOM",
                  "IMAGE_OUTFIT_2COL",
                  "IMAGE_OUTFIT_3COL",
                  "IMAGE_OUTFIT_4COL",
                  "IMAGE_BADGE_SMALL",
                  "IMAGE_BADGE_MEDIUM",
                  "IMAGE_BADGE_LARGE"
                ],
                "example": "IMAGE_ZOOM"
              },
              "index": {
                "type": "number",
                "example": 1
              },
              "url": {
                "type": "string",
                "example": "http://media.topshop.com/wcsstore/TopShop/images/catalog/32F04ITAN_thumb.jpg"
              }
            }
          }
        },
        "items": {
          "type": "array",
          "items": {}
        },
        "bundleProducts": {
          "type": "array",
          "items": {}
        },
        "attributes": {
          "type": "object",
          "properties": {}
        },
        "colourSwatches": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "colourName": {
                "type": "string",
                "example": ""
              },
              "imageUrl": {
                "type": "string",
                "example": "http://media.topshop.com/wcsstore/TopShop/images/catalog/swatch/001135.jpg"
              },
              "swatchProduct": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "number",
                    "example": 21953026
                  },
                  "grouping": {
                    "type": "string",
                    "example": "TS32F04ITAN"
                  },
                  "lineNumber": {
                    "type": "string",
                    "example": "32F04ITAN"
                  },
                  "name": {
                    "type": "string",
                    "example": "FAIRFAX Gladiator Fringe Sandals"
                  },
                  "shortDescription": {
                    "type": "string",
                    "example": "FAIRFAX Gladiator Fringe Sandals"
                  },
                  "unitPrice": {
                    "type": "string",
                    "example": "40.00"
                  },
                  "wasPrice": {
                    "type": "string",
                    "example": ""
                  },
                  "productUrl": {
                    "type": "string",
                    "example": "/en/tsuk/product/fairfax-gladiator-fringe-sandals-4899494?bi=0&ps=20&Ntt=gladiator"
                  },
                  "rating": {
                    "type": "string",
                    "example": ""
                  },
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "assetType": {
                          "type": "string",
                          "example": "IMAGE_SMALL"
                        },
                        "index": {
                          "type": "number",
                          "example": 1
                        },
                        "url": {
                          "type": "string",
                          "example": "http://media.topshop.com/wcsstore/TopShop/images/catalog/32F04ITAN_thumb.jpg"
                        }
                      }
                    }
                  },
                  "additionalAssets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "assetType": {
                          "type": "string",
                          "example": "IMAGE_ZOOM"
                        },
                        "index": {
                          "type": "number",
                          "example": 1
                        },
                        "url": {
                          "type": "string",
                          "example": "http://media.topshop.com/wcsstore/TopShop/images/catalog/32F04ITAN_thumb.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tpmLinks": {
          "type": "array",
          "items": {}
        },
        "bundleSlots": {
          "type": "array",
          "items": {}
        },
        "ageVerificationRequired": {
          "type": "boolean",
          "example": false
        },
        "isBundleOrOutfit": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "plpRefinements": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "example": "Category"
        },
        "refinementOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "VALUE"
              },
              "label": {
                "type": "string",
                "example": "Clothing"
              },
              "value": {
                "type": "string",
                "example": "Clothing"
              },
              "count": {
                "type": "number",
                "example": 11
              },
              "seoUrl": {
                "type": "string",
                "example": "/"
              }
            }
          }
        }
      }
    },
    "productAssets": {
      "type": "object",
      "properties": {
        "assetType": {
          "type": "string",
          "enum": [
            "IMAGE_SMALL",
            "IMAGE_ZOOM",
            "IMAGE_THUMB",
            "IMAGE_NORMAL",
            "IMAGE_LARGE",
            "IMAGE_PRODUCT_ICON"
          ],
          "example": "IMAGE_SMALL"
        },
        "index": {
          "type": "number",
          "example": 1
        },
        "url": {
          "type": "string",
          "example": "http://media.topshop.com/wcsstore/TopShop/images/catalog/32F04ITAN_thumb.jpg"
        }
      }
    },
    "inventoryPositions": {
      "type": "object",
      "properties": {
        "catentryId": {
          "type": "string",
          "example": "20298287"
        },
        "inventorys": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cutofftime": {
                "type": "string",
                "example": "2100"
              },
              "quantity": {
                "type": "number",
                "example": 9
              },
              "ffmcenterId": {
                "type": "number",
                "example": 12556
              },
              "expressdates": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "2017-10-26"
                }
              }
            }
          }
        }
      }
    },
    "orderAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Mr asdfadsf adsfdsaf"
        },
        "address1": {
          "type": "string",
          "example": "Emirates Stadium"
        },
        "address2": {
          "type": "string",
          "example": "Queensland Road"
        },
        "address3": {
          "type": "string",
          "example": "LONDON"
        },
        "address4": {
          "type": "string",
          "example": "N7 7AJ"
        },
        "country": {
          "type": "string",
          "example": "United Kingdom"
        }
      }
    },
    "userDetails": {
      "type": "object",
      "properties": {
        "addressDetailsId": {
          "type": "string",
          "example": "789993"
        },
        "nameAndPhone": {
          "type": "object",
          "properties": {
            "lastName": {
              "type": "string",
              "example": "asdfdsaf"
            },
            "telephone": {
              "type": "string",
              "example": "1231231231"
            },
            "title": {
              "type": "string",
              "example": "Mr"
            },
            "firstName": {
              "type": "string",
              "example": "asfdds"
            }
          }
        },
        "address": {
          "type": "object",
          "properties": {
            "address1": {
              "type": "string",
              "example": "3 Essex Road"
            },
            "address2": {
              "type": "string",
              "example": ""
            },
            "city": {
              "type": "string",
              "example": "LONDON"
            },
            "state": {
              "type": "string",
              "example": ""
            },
            "country": {
              "type": "string",
              "example": "United Kingdom"
            },
            "postcode": {
              "type": "string",
              "example": "E12 6RF"
            }
          }
        }
      }
    },
    "pdpProduct": {
      "type": "object",
      "properties": {
        "CEProductEspotCol1Pos1": {
          "type": "string",
          "example": "mobilePDPESpotPos2"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "assetType": {
                "type": "string",
                "enum": [
                  "IMAGE_SMALL",
                  "IMAGE_THUMB",
                  "IMAGE_NORMAL",
                  "IMAGE_LARGE"
                ]
              },
              "index": {
                "type": "integer"
              },
              "url": {
                "type": "string",
                "description": "The URL to the asset"
              }
            }
          }
        },
        "productDataQuantity": {
          "type": "object",
          "properties": {
            "inventoryPositions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "catentryId": {
                    "type": "string"
                  },
                  "inventorys": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cutofftime": {
                          "$ref": "#/definitions/24HrTimeString"
                        },
                        "expressdates": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/ISODate"
                          }
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "ffmcenterId": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "invavls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cutofftime": {
                          "$ref": "#/definitions/24HrTimeString"
                        },
                        "expressdates": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/ISODate"
                          }
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "stlocIdentifier": {
                          "type": "string",
                          "enum": [
                            "STANDARD",
                            "EXPRESS",
                            "STANDARD-INTERNATIONAL",
                            "EXPRESS-INTERNATIONAL"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "quantities": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "colourAttributes": {
              "type": "object",
              "properties": {
                "attrName": {
                  "type": "string"
                },
                "attrValue": {
                  "type": "string"
                }
              }
            },
            "SKUs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "skuid": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "availableinventory": {
                    "type": "string"
                  },
                  "partnumber": {
                    "type": "string"
                  },
                  "attrName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "ageVerificationRequired": {
          "type": "boolean",
          "example": false
        },
        "attributes": {
          "type": "object",
          "properties": {
            "CE3BThumbnailSuffixes": {
              "type": "string",
              "example": ""
            },
            "CE3ThumbnailSuffixes": {
              "type": "string",
              "example": ""
            },
            "COLOUR_CODE": {
              "type": "string",
              "example": "000776"
            },
            "Department": {
              "type": "string",
              "example": "62"
            },
            "ECMC_PROD_COLOUR_1": {
              "type": "string",
              "example": "GREY"
            },
            "ECMC_PROD_PRODUCT_TYPE_1": {
              "type": "string",
              "example": "Clothing"
            },
            "ECMC_PROD_SIZE_GUIDE_1": {
              "type": "string",
              "example": "Brands"
            },
            "EmailBackInStock": {
              "type": "string",
              "example": "N"
            },
            "IFSeason": {
              "type": "string",
              "example": "AW15"
            },
            "NotifyMe": {
              "type": "string",
              "example": "N"
            },
            "ProductDefaultCopy": {
              "type": "string",
              "example": ""
            },
            "STORE_DELIVERY": {
              "type": "string",
              "example": "true"
            },
            "STYLE_CODE": {
              "type": "string",
              "example": "NO_SWATCH_4076760"
            },
            "SearchKeywords": {
              "type": "string",
              "example": ""
            },
            "SizeFit": {
              "type": "string",
              "example": ""
            },
            "StyleCode": {
              "type": "string",
              "example": "0"
            },
            "ThresholdMessage": {
              "type": "string",
              "example": ""
            },
            "b_has360": {
              "type": "string",
              "example": "N"
            },
            "b_hasImage": {
              "type": "string",
              "example": "N"
            },
            "b_hasVideo": {
              "type": "string",
              "example": "N"
            },
            "b_thumbnailImageSuffixes": {
              "type": "string",
              "example": ""
            },
            "countryExclusion": {
              "type": "string",
              "example": ""
            },
            "ecmcCreatedTimestamp": {
              "type": "string",
              "example": "2015-10-09-09.01.29.000707"
            },
            "ecmcUpdatedTimestamp": {
              "type": "string",
              "example": "2015-10-16-07.26.50.000751"
            },
            "has360": {
              "type": "string",
              "example": "N"
            },
            "hasVideo": {
              "type": "string",
              "example": "N"
            },
            "shopTheOutfitBundleCode": {
              "type": "string",
              "example": ""
            },
            "thumbnailImageSuffixes": {
              "type": "string",
              "example": "_|_2"
            }
          }
        },
        "bundleProducts": {
          "type": "array",
          "items": {}
        },
        "bundleSlots": {
          "type": "array",
          "items": {}
        },
        "colour": {
          "type": "string",
          "example": "GREY"
        },
        "colourSwatches": {
          "type": "array",
          "items": {}
        },
        "contentSlotContentHTML": {
          "type": "string",
          "example": "%3C%21--+CMS+Page+Version%3A+static-0000104259+baseline%3A+3+revision%3A+0+published%3A+2015-11-25+14%3A44%3A30.98948%3Acogz+cogz%0A+++++++++CMS+Temp+Version%3A+template-0000011825+baseline%3A+1+revision%3A+0+description%3A+Home+Page+Module+-+Basic+%28REF+0000011783%29+published%3A+2015-06-25+10%3A42%3A08.412652+--%3E%0A%0A%0A++%0A%3Clink+rel%3D%22stylesheet%22+type%3D%22text%2Fcss%22+href%3D%22http%3A%2F%2Fts.pplive.arcadiagroup.ltd.uk%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fcms%2Ftemplates%2Fstatic%2Ftemplate-0000011825%2Fcss%2Ftheme1.css%22+%2F%3E%3Cstyle+type%3D%22text%2Fcss%22%3E%0A%2F*%3C%21%5BCDATA%5B*%2F%0A%2F*%5D%5D%3E*%2F%0A%3C%2Fstyle%3E%0A%0A++++%0A++%0A%0A++%0A++++%3Cdiv+id%3D%22static-0000104259%22+class%3D%27theme1+masonry-item+module-basic%27%3E%0A++++++%3Cdiv+class%3D%22masonry-item-inner%22%3E%0A++++++++%3Cimg+src%3D%22http%3A%2F%2Fts.pplive.arcadiagroup.ltd.uk%2Fwcsstore%2FConsumerDirectStorefrontAssetStore%2Fimages%2Fcolors%2Fcolor7%2Fcms%2Fpages%2Fstatic%2Fstatic-0000104259%2Fimages%2F35B66IBLK_2_thumb.jpg%22+alt%3D%22image%22+width%3D%22170%22+height%3D%22255%22+%2F%3E%0A++++++%3C%2Fdiv%3E%0A++++%3C%2Fdiv%3E%3C%21--Using+Master+Template%3A+%2Fstatic%2Ftemplate-0000011783+--%3E%0A++%0A%0A"
        },
        "deliveryMessage": {
          "type": "string",
          "example": "Order in 10 hrs 29 mins for next day delivery"
        },
        "description": {
          "type": "string",
          "example": "Smart shapes come updated for now in &#39;70s inspired suede textures. This button front dress comes with a flattering V-neck and a fitted silhouette. 100% Polyester. Machine wash.  &lt;BR&gt;&lt;B&gt;**PLEASE NOTE THIS ITEM CAN ONLY BE RETURNED VIA POST. STORES ARE UNABLE TO RETURN THESE ITEMS FOR YOU. ALL UK POSTAL RETURNS ARE FREE. INTERNATIONAL POSTAL CHARGES WILL VARY.&lt;/B&gt;"
        },
        "espots": {
          "type": "object",
          "properties": {
            "CE3ContentEspot1": {
              "type": "boolean",
              "example": false
            },
            "CEProductEspotCol1Pos1": {
              "type": "boolean",
              "example": false
            },
            "CEProductEspotCol1Pos2": {
              "type": "boolean",
              "example": false
            },
            "CEProductEspotCol2Pos1": {
              "type": "boolean",
              "example": false
            },
            "CEProductEspotCol2Pos2": {
              "type": "boolean",
              "example": false
            },
            "CEProductEspotCol2Pos4": {
              "type": "boolean",
              "example": false
            },
            "KlarnaPDPEspot1": {
              "type": "boolean",
              "example": false
            },
            "KlarnaPDPEspot2": {
              "type": "boolean",
              "example": false
            }
          },
          "grouping": {
            "type": "string",
            "example": "TS62Z39IGRY"
          },
          "isBundleOrOutfit": {
            "type": "boolean",
            "example": false
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number",
                  "example": 8
                },
                "selected": {
                  "type": "boolean",
                  "example": false
                },
                "size": {
                  "type": "string",
                  "example": "XS"
                },
                "sku": {
                  "type": "string",
                  "example": "602015000890858"
                }
              }
            }
          },
          "lineNumber": {
            "type": "string",
            "example": "62Z39IGRY"
          },
          "name": {
            "type": "string",
            "example": "**Suedette Tuxedo Dress by Love"
          },
          "productId": {
            "type": "number",
            "example": 21919934
          },
          "sourceUrl": {
            "type": "string",
            "example": "http://ts.pplive.arcadiagroup.ltd.uk/en/tsuk/product/suedette-tuxedo-dress-by-love-4891517"
          },
          "stockEmail": {
            "type": "boolean",
            "example": false
          },
          "stockThreshold": {
            "type": "number",
            "example": 0
          },
          "storeDelivery": {
            "type": "boolean",
            "example": true
          },
          "tmpLinks": {
            "type": "array",
            "items": {}
          },
          "unitPrice": {
            "type": "string",
            "example": "34.00"
          },
          "wasPrice": {
            "type": "string",
            "example": "36.00"
          },
          "wasWasPrice": {
            "type": "string",
            "example": "36.00"
          },
          "wcsColourADValueId": {
            "type": "string",
            "example": "GREY"
          },
          "wcsColourKey": {
            "type": "string",
            "example": "107684403"
          },
          "wcsSizeKey": {
            "type": "string",
            "example": "107684405"
          },
          "shopTheLookProducts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bundleId": {
                  "type": "string",
                  "example": "22044741"
                },
                "productDisplayURL": {
                  "type": "string",
                  "example": "http://ts.pplive.arcadiagroup.ltd.uk/en/tsuk/product/when-glamour-base-face-mask-4885217"
                },
                "bundleImagePath": {
                  "type": "string",
                  "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/20B09IGRN_thumb.jpg"
                },
                "bundleProductPrice": {
                  "type": "string",
                  "example": "7.0"
                }
              }
            }
          },
          "bundleDisplayURL": {
            "type": "string",
            "example": "http://ts.pplive.arcadiagroup.ltd.uk/en/tsuk/product/bundle58-short-description-4902076?bundle=true"
          },
          "promotionDisplayURL": {
            "type": "string",
            "example": "http://ts.pplive.arcadiagroup.ltd.uk/webapp/wcs/stores/servlet/DisplayPromoLanding?storeId=12556&promoId=11011916&urlRequestType=Base&promotionIdentifier=promo&langId=-1&catalogId=33057"
          },
          "promoTitle": {
            "type": "string",
            "example": "Buy 3 pairs of socks for £8"
          }
        }
      }
    },
    "savedBasketProduct": {
      "type": "object",
      "properties": {
        "total": {
          "type": "number",
          "example": 36
        },
        "addToBagURL": {
          "type": "string",
          "example": "http://ts.pplive.arcadiagroup.ltd.uk/webapp/wcs/stores/servlet/InterestItemDelete?updatePrices=1&calculationUsageId=-1&calculationUsageId=-2&calculationUsageId=-7&langId=-1&storeId=12556&catalogId=33057&productId=21919934&catEntryId=21919940&orderId=700331335&calculateOrder=1&quantity=1.0&pageName=shoppingBag&savedItem=true&URL=OrderItemAddAjax%3fURL%3dOrderCalculate%3fURL%3dAddToBagFromIntListAjaxView"
        },
        "catEntryId": {
          "type": "number",
          "example": 21919940
        },
        "colour": {
          "type": "string",
          "example": "GREY"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62Z39IGRY_small.jpg"
        },
        "instock": {
          "type": "boolean",
          "example": true
        },
        "itemquantity": {
          "type": "string",
          "example": "Quantity"
        },
        "lineNumber": {
          "type": "string",
          "example": "62Z39IGRY"
        },
        "name": {
          "type": "string",
          "example": "**Suedette Tuxedo Dress by Love"
        },
        "productId": {
          "type": "number",
          "example": 21919934
        },
        "quantity": {
          "type": "number",
          "example": 1
        },
        "removeSavedItemURL": {
          "type": "string",
          "example": "http://ts.pplive.arcadiagroup.ltd.uk/webapp/wcs/stores/servlet/InterestItemDelete?updatePrices=1&calculationUsageId=-1&langId=-1&storeId=12556&catalogId=33057&productId=21919934&catEntryId=21919940&orderId=700331335&calculateOrder=1&quantity=1.0&URL=InterestItemsRemoveItemAjaxView"
        },
        "shipModeId": {
          "type": "string",
          "example": ""
        },
        "size": {
          "type": "string",
          "example": "XS"
        },
        "sourceUrl": {
          "type": "string",
          "example": "http://ts.pplive.arcadiagroup.ltd.uk/webapp/wcs/stores/servlet/ProductDisplay?langId=-1&storeId=12556&catalogId=33057&productId=21919934&categoryId=208519&parent_category_rn=277012"
        },
        "totalLabel": {
          "type": "string",
          "example": "Total"
        },
        "unitPrice": {
          "type": "number",
          "example": 36
        },
        "updateUrl": {
          "type": "string",
          "example": "http://ts.pplive.arcadiagroup.ltd.uk/webapp/wcs/stores/servlet/ChangeDetailsDisplayAjaxView?orderId=700331335&langId=-1&storeId=12556&catalogId=33057&productId=21919934&catEntryId=21919940&offerPrice=36.00&size=XS&quantity=1.0&pageName=interestItem"
        }
      }
    },
    "account": {
      "type": "object",
      "properties": {
        "basketItemCount": {
          "type": "number",
          "example": 3
        },
        "billingDetails": {
          "type": "object",
          "properties": {
            "addressDetailsId": {
              "type": "string",
              "example": "789993"
            },
            "nameAndPhone": {
              "type": "object",
              "properties": {
                "lastName": {
                  "type": "string",
                  "example": "asdfdsaf"
                },
                "telephone": {
                  "type": "string",
                  "example": "1231231231"
                },
                "title": {
                  "type": "string",
                  "example": "Mr"
                },
                "firstName": {
                  "type": "string",
                  "example": "asfdds"
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "address1": {
                  "type": "string",
                  "example": "3 Essex Road"
                },
                "address2": {
                  "type": "string",
                  "example": ""
                },
                "city": {
                  "type": "string",
                  "example": "LONDON"
                },
                "state": {
                  "type": "string",
                  "example": ""
                },
                "country": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "postcode": {
                  "type": "string",
                  "example": "E12 6RF"
                }
              }
            }
          }
        },
        "creditCard": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "VISA"
            },
            "cardNumberHash": {
              "type": "string",
              "example": "tjOBl4zzS+ueTZQWartO5l968iOmCOix"
            },
            "cardNumberStar": {
              "type": "string",
              "example": "************1111"
            },
            "expiryMonth": {
              "type": "string",
              "example": "02"
            },
            "expiryYear": {
              "type": "string",
              "example": "2018"
            }
          }
        },
        "deliveryDetails": {
          "type": "object",
          "properties": {
            "addressDetailsId": {
              "type": "number",
              "example": 789993
            },
            "nameAndPhone": {
              "type": "object",
              "properties": {
                "lastName": {
                  "type": "string",
                  "example": "asdfdsaf"
                },
                "telephone": {
                  "type": "string",
                  "example": "1231231231"
                },
                "title": {
                  "type": "string",
                  "example": "Mr"
                },
                "firstName": {
                  "type": "string",
                  "example": "asfdds"
                }
              }
            },
            "address": {
              "type": "object",
              "properties": {
                "address1": {
                  "type": "string",
                  "example": "3 Essex Road"
                },
                "address2": {
                  "type": "string",
                  "example": ""
                },
                "city": {
                  "type": "string",
                  "example": "LONDON"
                },
                "state": {
                  "type": "string",
                  "example": ""
                },
                "country": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "postcode": {
                  "type": "string",
                  "example": "E12 6RF"
                }
              }
            }
          }
        },
        "email": {
          "type": "text",
          "example": "monty@desktop.com"
        },
        "exists": {
          "type": "boolean",
          "example": true
        },
        "firstName": {
          "type": "string",
          "example": "asdfdsaf"
        },
        "lastName": {
          "type": "string",
          "example": "adsfdsaf"
        },
        "subscriptionId": {
          "type": "number",
          "example": 2051366
        },
        "title": {
          "type": "string",
          "example": "Mr"
        },
        "userTrackingId": {
          "type": "number",
          "example": 1221110
        },
        "appId": {
          "type": "string",
          "example": "1234-1234-1234-1234"
        },
        "userId": {
          "type": "string",
          "example": "1234-1234-1234-1234"
        },
        "userToken": {
          "type": "string",
          "example": "1234-1234-1234-1234"
        },
        "expId1": {
          "type": "string",
          "example": "ba01f790419dc0f27b69b4184943286dd0e738ff8dbf4287d138c0cb0409ba09",
          "description": "hash of email_id for exponea"
        },
        "expId2": {
          "type": "string",
          "example": "8335c4e067a04af8a4cdb3aa688379d7e3e2625e0c1e7e39e7024bf21ba7bf57",
          "description": "hash of member_id for exponea"
        },
        "isDDPUser": {
          "type": "boolean",
          "example": true,
          "description": "is the user currently a ddp user"
        },
        "isDDPRenewable": {
          "type": "boolean",
          "example": false,
          "description": "is the user able to renew their expired or expiring ddp subscription. Becomes active when the user has 1 month remaining on their current subscription."
        },
        "ddpStartDate": {
          "type": "string",
          "example": "5 July 2020",
          "description": "When did their DDP subscription start."
        },
        "ddpEndDate": {
          "type": "string",
          "example": "5 July 2020",
          "description": "When will their DDP subscription end."
        },
        "wasDDPUser": {
          "type": "boolean",
          "example": false,
          "description": "Has the user ever had DDP?"
        },
        "ddpCurrentOrderCount": {
          "type": "number",
          "example": 3,
          "description": "How many order has the user placed during their current DDP subscription"
        },
        "ddpPreviousOrderCount": {
          "type": "number",
          "example": 0,
          "description": "How many order has the user placed during their previous DDP subscription"
        },
        "ddpCurrentSaving": {
          "type": "number",
          "example": 12.05,
          "description": "Approximate amount of savings accrued by the DDP User during their current DDP subscription."
        },
        "ddpPreviouSaving": {
          "type": "number",
          "example": 0,
          "description": "Approximate amount of savings accrued by the DDP User during their previous DDP subscription."
        },
        "ddpStandardPrice": {
          "type": "number",
          "example": 5.95,
          "description": "Standard price of DDP for this brand."
        },
        "ddpExpressDeliveryPrice": {
          "type": "number",
          "example": 6,
          "description": "Standard cost of express delivery for this brand."
        }
      }
    },
    "orderLines": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "lineNo": {
            "type": "string",
            "example": "62Z39IGRY"
          },
          "name": {
            "type": "string",
            "example": "**Suedette Tuxedo Dress by Love"
          },
          "size": {
            "type": "string",
            "example": "S"
          },
          "colour": {
            "type": "string",
            "example": "GREY"
          },
          "imageUrl": {
            "type": "string",
            "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62Z39IGRY_thumb.jpg"
          },
          "baseImageUrl": {
            "type": "string",
            "example": "http://ts.pplive.arcadiagroup.ltd.uk/wcsstore/TopShop/images/catalog/62Z39IGRY"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "unitPrice": {
            "type": "string",
            "example": "36.00"
          },
          "discount": {
            "type": "string",
            "example": "2.00"
          },
          "total": {
            "type": "string",
            "example": "34.00"
          },
          "nonRefundable": {
            "type": "boolean",
            "example": false
          },
          "wasPrice": {
            "type": "string",
            "example": "55.00"
          },
          "wasWasPrice": {
            "type": "string",
            "example": "60.00"
          }
        }
      }
    },
    "paymentDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "example": "Visa"
          },
          "cardNumberStar": {
            "type": "string",
            "example": "************1111"
          },
          "totalCost": {
            "type": "string",
            "example": "£58.25"
          }
        }
      }
    },
    "orderSummary": {
      "type": "object",
      "properties": {
        "basket": {
          "$ref": "#/definitions/basket"
        },
        "deliveryLocations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deliveryLocationType": {
                "type": "string",
                "example": "HOME"
              },
              "label": {
                "type": "string",
                "example": "Home Delivery Standard (UK up to 4 working days; worldwide varies) Express (UK next or nominated day; worldwide varies)"
              },
              "selected": {
                "type": "boolean",
                "example": false
              },
              "enabled": {
                "type": "boolean",
                "example": false
              },
              "errorCode": {
                "type": "string",
                "example": "_API_CANT_RESOLVE_FFMCENTER.2"
              },
              "deliveryMethods": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "shipModeId": {
                      "type:": "number",
                      "example": 26504
                    },
                    "shipCode": {
                      "type": "string",
                      "example": "S"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "HOME_STANDARD"
                    },
                    "label": {
                      "type": "string",
                      "example": "Standard Delivery"
                    },
                    "additionalDescription": {
                      "type": "string",
                      "example": "2 - 4 Working days"
                    },
                    "cost": {
                      "type": "number",
                      "example": 0
                    },
                    "selected": {
                      "type": "boolean",
                      "example": true
                    },
                    "enabled": {
                      "type": "boolean",
                      "example": false
                    },
                    "deliveryOptions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "shipModeId": {
                            "type": "number",
                            "example": 28004
                          },
                          "dayText": {
                            "type": "string",
                            "example": "Wed"
                          },
                          "dateText": {
                            "type": "string",
                            "example": "18 Oct"
                          },
                          "nominatedDate": {
                            "type": "string",
                            "example": "2017-10-18"
                          },
                          "price": {
                            "type": "string",
                            "example": "6.00"
                          },
                          "enabled": {
                            "type": "boolean",
                            "example": false
                          },
                          "selected": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "giftCards": {
          "$ref": "#/definitions/giftCards"
        },
        "deliveryInstructions": {
          "type": "string",
          "example": "Leave under the porch."
        },
        "smsMobileNumber": {
          "type": "string",
          "example": ""
        },
        "shippingCountry": {
          "type": "string",
          "example": "United Kingdom"
        },
        "savedAddresses": {
          "$ref": "#/definitions/savedAddresses"
        },
        "ageVerificationDeliveryConfirmationRequired": {
          "type": "boolean",
          "example": false
        },
        "estimatedDelivery": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "No later than Monday 23 October 2017"
          }
        },
        "cardNumberHash": {
          "type": "string",
          "example": "tjOBl4zzS+ueTZQWartO5l968iOmCOix"
        },
        "creditCard": {
          "$ref": "#/definitions/creditCard"
        },
        "billingDetails": {
          "$ref": "#/definitions/userDetails"
        },
        "deliveryDetails": {
          "$ref": "#/definitions/userDetails"
        },
        "isGuestOrder": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "orderCompleted": {
      "type": "object",
      "properties": {
        "completedOrder": {
          "type": "object",
          "properties": {
            "billingAddress": {
              "type": "object",
              "properties": {
                "address1": {
                  "type": "string",
                  "example": "123 Sesame Street"
                },
                "address2": {
                  "type": "string",
                  "example": ""
                },
                "address3": {
                  "type": "string",
                  "example": "London"
                },
                "country": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "name": {
                  "type": "string",
                  "example": "Bob Barker"
                }
              }
            },
            "currencyConversion": {
              "type": "object",
              "properties": {
                "currencyRate": {
                  "type": "string",
                  "example": "GBP"
                }
              }
            },
            "deliveryAddress": {
              "type": "object",
              "properties": {
                "address1": {
                  "type": "string",
                  "example": "1 Oxford Circus"
                },
                "address2": {
                  "type": "string",
                  "example": "West End"
                },
                "address3": {
                  "type": "string",
                  "example": "London"
                },
                "country": {
                  "type": "string",
                  "example": "United Kingdom"
                },
                "name": {
                  "type": "string",
                  "example": "Bob Barker"
                }
              }
            },
            "deliveryCarrier": {
              "type": "string",
              "example": ""
            },
            "deliveryCost": {
              "type": "string",
              "example": "4.00"
            },
            "deliveryDate": {
              "type": "string",
              "example": "12 January 2018"
            },
            "deliveryMethod": {
              "type": "string",
              "example": "Standard Delivery"
            },
            "deliveryPrice": {
              "type": "string",
              "example": "4.00"
            },
            "orderId": {
              "type": "number",
              "example": 700381254
            },
            "orderLines": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "colour": {
                    "type": "string",
                    "example": "BLUE"
                  },
                  "discount": {
                    "type": "string",
                    "example": "10.00"
                  },
                  "discountPrice": {
                    "type": "string",
                    "example": "30.00"
                  },
                  "imageUrl": {
                    "type": "string",
                    "example": "https://stage.topshop.com/image"
                  },
                  "lineNo": {
                    "type": "string",
                    "example": "1A1A1A"
                  },
                  "productId": {
                    "type": "string",
                    "example": "313131"
                  },
                  "name": {
                    "type": "string",
                    "example": "Blue dress"
                  },
                  "nonRefundable": {
                    "type": "boolean",
                    "example": false
                  },
                  "quantity": {
                    "type": "quantity",
                    "example": 1
                  },
                  "size": {
                    "type": "string",
                    "example": "12"
                  },
                  "total": {
                    "type": "string",
                    "example": "30.00"
                  },
                  "unitPrice": {
                    "type": "string",
                    "example": "40.00"
                  },
                  "wasPrice": {
                    "type": "string",
                    "example": "5.00"
                  }
                }
              }
            },
            "paymentDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cardNumberStar": {
                    "type": "string",
                    "example": "************1111"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "example": "VISA"
                  },
                  "totalCost": {
                    "type": "string",
                    "example": "34.00"
                  }
                }
              }
            },
            "returnPossible": {
              "type": "boolean",
              "example": false
            },
            "returnRequested": {
              "type": "boolean",
              "example": false
            },
            "returning_buyer": {
              "type": "boolean",
              "example": true
            },
            "subTotal": {
              "type": "string",
              "example": "30.00"
            },
            "totalOrderPrice": {
              "type": "string",
              "example": "34.00"
            },
            "totalOrdersDiscount": {
              "type": "string",
              "example": "10.00"
            },
            "totalOrdersDiscountLabel": {
              "type": "string",
              "example": ""
            },
            "userType": {
              "description": "G: Guest order; R: Returning customer placed an order; A: Customer placed an order but not registered on same day; S: Customer placed an order registering on same day;",
              "type": "string",
              "enum": [
                "G",
                "R",
                "A",
                "S"
              ],
              "example": "S"
            },
            "ddpPromotion": {
              "type": "object",
              "example": {
                "label": "DDP_Shipping_Promotion",
                "value": -5.95
              }
            },
            "promoCodes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "promotionCode": {
                    "type": "string",
                    "example": "F84MB92NV9"
                  },
                  "label": {
                    "type": "string",
                    "example": "Monty 5p off"
                  }
                }
              }
            },
            "isRegisteredEmail": {
              "type": "boolean",
              "example": true
            },
            "guestUserEmail": {
              "type": "string",
              "example": "guestuseremail@mail.com"
            }
          }
        }
      }
    },
    "pdpProductSizesAndQuantities": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "example": "36"
        },
        "sku": {
          "type": "string",
          "example": "602015000851659"
        },
        "quantity": {
          "type": "number",
          "example": 4
        },
        "selected": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "prePaymentConfig": {
      "type": "object",
      "properties": {
        "binNumber": {
          "type": "string",
          "example": "444433",
          "description": "Bank Identification Number (BIN)"
        },
        "ddcJwt": {
          "type": "string",
          "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIzNjg5YWU2OS1jZTk4LTQwZGEtOTA5NC0zOTczYjYyNDEyNmQiLCJpYXQiOjE1NjIxNjc5OTgsInN1YiI6IkpKV1QiLCJleHAiOjE1NjIxNzE1OTgsIk9yZ1VuaXRJZCI6IjViZDliNTVlNDQ0NDc2MWFjMGFmMWM4MCJ9.XsuCgWYvZ3bxJ6-VVy1-bQ3CTsZsnOdPry6lze3kEr4",
          "description": "JSON Web Token (JWT) for Device Data Collection (DDC)"
        },
        "orderId": {
          "type": "string",
          "example": "123456",
          "description": "WCS Order Id"
        }
      }
    }
  }
}