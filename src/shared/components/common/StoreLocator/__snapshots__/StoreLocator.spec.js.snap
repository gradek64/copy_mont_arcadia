// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StoreLocator/> @functions @renderMap 1`] = `
<div
  className="StoreLocator-fullHeightContainer "
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <div
    className="StoreLocator-resultsContainer StoreLocator-resultsContainer--fullHeight"
  >
    <Connect(Store)
      directionsFrom={
        Object {
          "latitude": undefined,
          "longitude": undefined,
        }
      }
      onHeaderClick={[Function]}
      onSelectClick={[Function]}
      parentElementRef={[Function]}
      selected={false}
      storeDetails={
        Object {
          "storeId": "TS0001",
        }
      }
      storeLocatorType="storeSearch"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @functions @renderStorePredictions 1`] = `
<div
  className="StoreLocator-resultsContainer StoreLocator-resultsContainer--fullHeight"
>
  <Connect(Store)
    directionsFrom={
      Object {
        "latitude": undefined,
        "longitude": undefined,
      }
    }
    onHeaderClick={[Function]}
    onSelectClick={[Function]}
    parentElementRef={[Function]}
    selected={false}
    storeDetails={
      Object {
        "storeId": "TS0001",
      }
    }
    storeLocatorType="storeSearch"
  />
</div>
`;

exports[`<StoreLocator/> @renders footer should not display footer when mapExpanded=false and storeLocatorType is not "collectFromStore" 1`] = `null`;

exports[`<StoreLocator/> @renders footer should show renderFooterMapCollapsed when mapExpanded=false and is collectFromStore 1`] = `
<div
  className="StoreLocator-footer"
  onClick={[Function]}
>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <button
      className="StoreLocator-showFiltersButton"
      onClick={[Function]}
    >
      Filter
    </button>
  </Connect(FeatureCheck)>
  <div
    className="StoreLocator-footerText"
  >
    Showing all store types
  </div>
</div>
`;

exports[`<StoreLocator/> @renders footer should show renderFooterMapExpanded when mapExpanded=true 1`] = `
<div
  className="StoreLocator-footer"
  onClick={[MockFunction]}
>
  <div
    className="StoreLocator-footerText"
  >
    Show list
  </div>
</div>
`;

exports[`<StoreLocator/> @renders in default state 1`] = `
<div
  className="StoreLocator is-landing"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders in loading state 1`] = `
<div
  className="StoreLocator is-landing"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on desktop storeLocatorType !== collectFromStore do not display UserLocatorInput on Google Map 1`] = `
Array [
  <div
    className="StoreLocator-googleMapContainer"
    key="StoreLocator-GoogleMap"
  />,
]
`;

exports[`<StoreLocator/> @renders on desktop storeLocatorType !== collectFromStore search and empty list of stores 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on desktop storeLocatorType !== collectFromStore search and empty store 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on desktop storeLocatorType !== collectFromStore search and list of stores 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
    <div
      className="StoreLocator-resultsContainer StoreLocator-resultsContainer--fullHeight"
      key="storeList"
    >
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0032"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "Strand",
              "line1": "60/64 The Strand",
              "line2": "",
              "postcode": "WC2N 5LR",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.16",
            "latitude": 51.509599,
            "longitude": -0.123069,
            "name": "Strand",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0032",
            "telephoneNumber": "020 7839 4144",
          }
        }
        storeLocatorType="notCollectFromStore"
      />
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0001"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "West End",
              "line1": "214 Oxford Street",
              "line2": "Oxford Circus",
              "postcode": "W1W 8LG",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.51",
            "latitude": 51.5157,
            "longitude": -0.141396,
            "name": "Oxford Circus",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0001",
            "telephoneNumber": "03448 487487",
          }
        }
        storeLocatorType="notCollectFromStore"
      />
    </div>
  </div>
  <div
    className="StoreLocator-fullHeightContainer "
    style={
      Object {
        "opacity": 1,
      }
    }
  />
</div>
`;

exports[`<StoreLocator/> @renders on desktop storeLocatorType !== collectFromStore without search 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore and when isHeaderEnabled=true do not display UserLocatorInput on Google Map 1`] = `
Array [
  <div
    className="StoreLocator-googleMapContainer StoreLocator-googleMapContainer--withEnabledHeader"
    key="StoreLocator-GoogleMap"
  />,
]
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore country query and empty list of stores 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <div
      className="StoreLocator-noSearchResults"
    >
      <p>
        Sorry, we couldn't find any locations matching your search. Please enter another location or modify your filters.
      </p>
      <UserLocator
        locator="StoreLocator-noResults"
        storeLocatorLandingPage={true}
        storeLocatorType="notCollectFromStore"
      />
    </div>
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore is new headerEnabled 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore lat/long query and empty list of stores 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <div
      className="StoreLocator-noSearchResults"
    >
      <p>
        Sorry, we couldn't find any locations matching your search. Please enter another location or modify your filters.
      </p>
      <UserLocator
        locator="StoreLocator-noResults"
        storeLocatorLandingPage={true}
        storeLocatorType="notCollectFromStore"
      />
    </div>
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore random query and empty list of stores 1`] = `
<div
  className="StoreLocator is-landing StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="notCollectFromStore"
    />
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType !== collectFromStore search term and list of stores 1`] = `
<div
  className="StoreLocator StoreLocator--notCollectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-fullHeightContainer "
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <div
      className="StoreLocator-googleMapContainer"
      key="StoreLocator-GoogleMap"
    >
      <Form
        className="StoreLocator-userLocatorInputContainer"
        noValidate={true}
        onSubmit={[Function]}
      >
        <Connect(UserLocatorInput)
          selectedCountry="United Kingdom"
        />
      </Form>
    </div>
    <div
      className="StoreLocator-resultsContainer"
      key="storeList"
    >
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": 50.2342,
            "longitude": 4.2234,
          }
        }
        key="TS0032"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "Strand",
              "line1": "60/64 The Strand",
              "line2": "",
              "postcode": "WC2N 5LR",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.16",
            "latitude": 51.509599,
            "longitude": -0.123069,
            "name": "Strand",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0032",
            "telephoneNumber": "020 7839 4144",
          }
        }
        storeLocatorType="notCollectFromStore"
      />
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": 50.2342,
            "longitude": 4.2234,
          }
        }
        key="TS0001"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "West End",
              "line1": "214 Oxford Street",
              "line2": "Oxford Circus",
              "postcode": "W1W 8LG",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.51",
            "latitude": 51.5157,
            "longitude": -0.141396,
            "name": "Oxford Circus",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0001",
            "telephoneNumber": "03448 487487",
          }
        }
        storeLocatorType="notCollectFromStore"
      />
    </div>
  </div>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore do not display UserLocatorInput on Google Map 1`] = `
Array [
  <div
    className="StoreLocator-googleMapContainer"
    key="StoreLocator-GoogleMap"
  />,
]
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore no search term 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="collectFromStore"
    />
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing all store types
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore no search term and empty stores 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="collectFromStore"
    />
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing all store types
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore no search term and list of stores 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="collectFromStore"
    />
  </div>
  <div
    className="StoreLocator-fullHeightContainer "
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <div
      className="StoreLocator-resultsContainer StoreLocator-resultsContainer--fullHeight"
      key="storeList"
    >
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0032"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "Strand",
              "line1": "60/64 The Strand",
              "line2": "",
              "postcode": "WC2N 5LR",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.16",
            "latitude": 51.509599,
            "longitude": -0.123069,
            "name": "Strand",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0032",
            "telephoneNumber": "020 7839 4144",
          }
        }
        storeLocatorType="collectFromStore"
      />
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0001"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "West End",
              "line1": "214 Oxford Street",
              "line2": "Oxford Circus",
              "postcode": "W1W 8LG",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.51",
            "latitude": 51.5157,
            "longitude": -0.141396,
            "name": "Oxford Circus",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0001",
            "telephoneNumber": "03448 487487",
          }
        }
        storeLocatorType="collectFromStore"
      />
    </div>
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing all store types
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore no search term and some filters applied 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <UserLocator
      locator="TopNavMenu"
      storeLocatorLandingPage={true}
      storeLocatorType="collectFromStore"
    />
  </div>
  <div
    className="StoreLocator-fullHeightContainer "
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <div
      className="StoreLocator-resultsContainer StoreLocator-resultsContainer--fullHeight"
      key="storeList"
    >
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0032"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "Strand",
              "line1": "60/64 The Strand",
              "line2": "",
              "postcode": "WC2N 5LR",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.16",
            "latitude": 51.509599,
            "longitude": -0.123069,
            "name": "Strand",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0032",
            "telephoneNumber": "020 7839 4144",
          }
        }
        storeLocatorType="collectFromStore"
      />
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": undefined,
            "longitude": undefined,
          }
        }
        key="TS0001"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "West End",
              "line1": "214 Oxford Street",
              "line2": "Oxford Circus",
              "postcode": "W1W 8LG",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.51",
            "latitude": 51.5157,
            "longitude": -0.141396,
            "name": "Oxford Circus",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0001",
            "telephoneNumber": "03448 487487",
          }
        }
        storeLocatorType="collectFromStore"
      />
    </div>
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing ParcelShops, Other stores
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore search term and empty list of stores 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-userLocatorContainer"
  >
    <div
      className="StoreLocator-noSearchResults"
    >
      <p>
        Sorry, we couldn't find any locations matching your search. Please enter another location or modify your filters.
      </p>
      <UserLocator
        locator="StoreLocator-noResults"
        storeLocatorLandingPage={true}
        storeLocatorType="collectFromStore"
      />
    </div>
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing all store types
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders on mobile storeLocatorType === collectFromStore search term and list of stores 1`] = `
<div
  className="StoreLocator StoreLocator--collectFromStore"
>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
    title="Store Locator"
  />
  <div
    className="StoreLocator-fullHeightContainer "
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <div
      className="StoreLocator-googleMapContainer"
      key="StoreLocator-GoogleMap"
    />
    <div
      className="StoreLocator-resultsContainer"
      key="storeList"
    >
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": 50.2342,
            "longitude": 4.2234,
          }
        }
        key="TS0032"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "Strand",
              "line1": "60/64 The Strand",
              "line2": "",
              "postcode": "WC2N 5LR",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.16",
            "latitude": 51.509599,
            "longitude": -0.123069,
            "name": "Strand",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0032",
            "telephoneNumber": "020 7839 4144",
          }
        }
        storeLocatorType="collectFromStore"
      />
      <Connect(Store)
        directionsFrom={
          Object {
            "latitude": 50.2342,
            "longitude": 4.2234,
          }
        }
        key="TS0001"
        onHeaderClick={[Function]}
        onSelectClick={[Function]}
        parentElementRef={[Function]}
        selected={false}
        storeDetails={
          Object {
            "address": Object {
              "city": "West End",
              "line1": "214 Oxford Street",
              "line2": "Oxford Circus",
              "postcode": "W1W 8LG",
            },
            "brandId": 12556,
            "collectFromStore": Object {
              "express": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 3,
              },
              "standard": Object {
                "dates": Array [
                  Object {
                    "availableUntil": "2017-03-21 20:30:00",
                    "collectFrom": "2017-03-22",
                  },
                  Object {
                    "availableUntil": "2017-03-22 20:30:00",
                    "collectFrom": "2017-03-23",
                  },
                  Object {
                    "availableUntil": "2017-03-23 20:30:00",
                    "collectFrom": "2017-03-24",
                  },
                ],
                "price": 0,
              },
            },
            "distance": "0.51",
            "latitude": 51.5157,
            "longitude": -0.141396,
            "name": "Oxford Circus",
            "openingHours": Object {
              "friday": "09:00-21:00",
              "monday": "09:00-20:00",
              "saturday": "09:00-21:00",
              "sunday": "12:00-18:00",
              "thursday": "09:00-21:00",
              "tuesday": "09:00-21:00",
              "wednesday": "09:00-21:00",
            },
            "storeId": "TS0001",
            "telephoneNumber": "03448 487487",
          }
        }
        storeLocatorType="collectFromStore"
      />
    </div>
  </div>
  <Connect(FeatureCheck)
    flag="FEATURE_PUDO"
  >
    <div
      className="StoreLocator-footer"
      onClick={[Function]}
    >
      <Connect(FeatureCheck)
        flag="FEATURE_PUDO"
      >
        <button
          className="StoreLocator-showFiltersButton"
          onClick={[Function]}
        >
          Filter
        </button>
      </Connect(FeatureCheck)>
      <div
        className="StoreLocator-footerText"
      >
        Showing all store types
      </div>
    </div>
  </Connect(FeatureCheck)>
</div>
`;

exports[`<StoreLocator/> @renders with google map when latitude and longitude is not valid 1`] = `
<div
  className="StoreLocator-googleMapContainer"
  key="StoreLocator-GoogleMap"
>
  <Form
    className="StoreLocator-userLocatorInputContainer"
    noValidate={true}
    onSubmit={[Function]}
  >
    <Connect(UserLocatorInput)
      selectedCountry="United Kingdom"
    />
  </Form>
</div>
`;

exports[`<StoreLocator/> @renders with google map when latitude and longitude is valid 1`] = `
<div
  className="StoreLocator-googleMapContainer"
  key="StoreLocator-GoogleMap"
>
  <Form
    className="StoreLocator-userLocatorInputContainer"
    noValidate={true}
    onSubmit={[Function]}
  >
    <Connect(UserLocatorInput)
      selectedCountry="United Kingdom"
    />
  </Form>
</div>
`;

exports[`<StoreLocator/> @renders with google map when latitude and longitude is valid with headerEnabled 1`] = `
<div
  className="StoreLocator-googleMapContainer StoreLocator-googleMapContainer--withEnabledHeader"
  key="StoreLocator-GoogleMap"
/>
`;
